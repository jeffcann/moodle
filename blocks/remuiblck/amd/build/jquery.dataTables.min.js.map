{"version":3,"sources":["jquery.dataTables.js"],"names":["factory","define","amd","$","window","document","exports","module","root","require","jQuery","undefined","_ext","_Api","_api_register","_api_registerPlural","DataTable","options","this","sSelector","oOpts","api","_","rows","data","traditional","_fnSettingsFromNode","iApiIndex","fnAddData","redraw","isArray","isPlainObject","add","row","draw","flatten","toArray","fnAdjustColumnSizing","bRedraw","columns","adjust","settings","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","target","callback","aoData","remove","call","fnDestroy","destroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","type","nodeName","toLowerCase","cell","fnGetNodes","iRow","node","nodes","fnGetPosition","toUpperCase","index","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","page","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","len","length","fn","oApi","internal","ext","_fnExternApiFunc","each","iLen","oInit","_fnExtend","i","sId","getAttribute","bInitHandedOff","defaults","$this","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","extend","allSettings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","_fnLog","sTableId","id","splice","_unique","oSettings","models","sDestroyWidth","style","width","sInstance","push","dataTable","oLanguage","_fnLanguageCompat","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","bJQueryUI","oJUIClasses","sDom","renderer","header","classes","addClass","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","children","find","eq","inArray","map","el","hasClass","removeClass","join","asDestroyStripes","slice","aoColumnsInit","anThs","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","a","name","sort","filter","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","dir","_fnCallbackFire","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","appendTo","tbody","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","bStateSave","_fnSaveState","_fnLoadState","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_htmlNumeric","_isHtml","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","sorted","last","_areAllUnique","j","k","again","_fnHungarianMap","o","match","newKey","key","indexOf","_hungarianMap","user","force","hungarianKey","charAt","lang","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","sDecimal","_addNumericSort","util","throttle","freq","timer","frequency","that","now","Date","args","arguments","clearTimeout","setTimeout","apply","escapeRegex","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","n","position","top","left","scrollLeft","height","overflow","append","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","value","isSet","hasOwnProperty","nTh","oDefaults","oCol","oColumn","createElement","sTitle","innerHTML","idx","aoPreSearchCols","oOptions","th","sWidthOrig","attr","t","mDataProp","sType","_sManualType","className","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","meta","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","jen","ken","detectedType","cache","types","detect","_fnGetCellData","aoColDefs","aoCols","jLen","kLen","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","_fnSetCellData","__reArray","__reFn","_fnSplitObjNotation","str","mSource","fetchData","arrayNotation","funcNotation","innerSrc","substring","setData","b","aLast","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","anCells","_aSortData","_aFilterData","cols","_fnRowAttributes","contents","tds","td","objectRead","setter","cellProcess","trim","nextSibling","rowNode","nTrIn","nTd","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","setAttribute","tr","DT_RowClass","split","__rowc","concat","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","html","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","iRowspan","iColspan","aoLocal","aApplied","iColumns","_fnDraw","aPreDraw","anRows","iRowCount","iStripes","oLang","aoOpenRows","bServerSide","bDrawing","fnRecordsDisplay","iDisplayEnd","fnDisplayEnd","_fnProcessingDisplay","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","class","valign","colSpan","sRowEmpty","body","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","sWrapper","nHolding","nTableWrapper","nTableReinsertBefore","featureNode","cOption","nNewNode","cNext","sAttr","aDom","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nCell","l","iColShifted","bUnique","nTrs","fnShiftCol","unique","nHeader","aReturn","bSortCellsTop","_fnBuildAjax","rbracket","ajaxData","instance","jqXHR","newData","isFunction","baseAjax","sError","sServerMethod","xhr","thrown","ret","readyState","oAjaxData","fnServerData","sAjaxSource","bAjaxDataGet","_fnAjaxParameters","_fnAjaxUpdateDraw","dataProp","columnSearch","columnCount","preSearch","preColSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","_fnAjaxDataSrc","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","f","sFilter","searchFn","searchDelay","jqFilter","sSearchPlaceholder","on","_fnThrottle","e","keyCode","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","test","invalidated","prevSearch","displayMaster","filtered","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","fomatters","wasInvalidated","toString","innerText","_fnSearchToCamel","obj","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","_fnInfoMacros","sInfoPostFix","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","aria-controls","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","r","sProcessing","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","box-sizing","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","correction","sanityWidth","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooterInner","divFooterTable","tableEl","tableStyle","ie67","dtHeaderCells","headerWidths","footerWidths","headerContent","footerContent","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","nToSize","iOuterWidth","bScrolling","padding","scrollTop","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","columnIdx","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","styleWidth","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","_fnGetMaxLenString","maxIdx","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","sortCol","aiOrig","oExtSort","formatters","_fnSortData","x","y","dataA","dataB","label","nextSort","oAria","removeAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customData","customSort","sSortDataType","state","time","oSavedState","fnStateSaveCallback","loaded","abStateLoad","duration","iStateDuration","oLoadedState","fnStateLoadCallback","level","msg","tn","console","log","sErrMode","errMode","alert","Error","mappedName","extender","breakRefs","blur","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","trigger","result","host","__apiStruct","__arrayProto","Array","prototype","context","ctxSettings","mixed","jq","tables","_toSettings","selector","opts","Api","any","count","ctx","iterator","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","paging","info","recordsDisplay","serverSide","__reload","one","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","sel","selInt","closest","rowObj","__row_selector","hash","thatIdx","loopRow","loopCells","newRows","modRows","__details_remove","_details","_detailsShow","__details_display","insertAfter","__details_events","off","drawEvent","_child_obj","klass","addRow","created","__details_add","_child_mth","__re_column_selector","__columnData","r1","r2","names","visColumns","jqResult","__column_selector","calc","__setColumnVis","rowSelector","columnSelector","allCells","fnSelector","__cell_selector","set","caseInsen","versionCheck","version","iThis","iThat","aThis","aThat","isDataTable","fnIsDataTable","get","is","head","foot","fnTables","camelToHungarian","jqRows","orig","jqTable","jqTbody","jqWrapper","bJUI","sSortIcon","wrapper","sSortJUIWrapper","removedMethod","arg1","arg2","arg3","arg4","token","plural","resolved","bScrollCollapse","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","oPaginate","sFirst","sLast","sNext","sPrevious","sScrollXInner","sScrollY","aoRowCallback","aoHeaderCallback","aoFooterCallback","aoRowCreatedCallback","aoPreDrawCallback","aoInitComplete","aoStateSaveParams","aoStateLoadParams","aoStateLoaded","aoStateSave","aoStateLoad","aoServerParams","aoDestroyCallback","paginate","min","oPlugins","builder","pageButton","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","sPageButton","sPageButtonActive","sPageButtonDisabled","sSortAsc","sSortDesc","sSortJUIAsc","sSortJUIDesc","_stateDefault","_sortIcon","_headerFooter","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","btnDisplay","btnClass","activeEl","aria","counter","attach","container","button","clickHandler","aria-label","data-dt-idx","tabindex","empty","focus","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","num-fmt","html-num","html-num-fmt","date-pre","html-pre","string-pre","string-asc","string-desc","jqueryui","__htmlEscapeEntities","render","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnNodeToDataIndex","_fnNodeToColumnIndex","_fnCalculateEnd","dataTableSettings","dataTableExt"],"mappings":"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","sourcesContent":["/*! DataTables 1.10.15\n * ©2008-2017 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.15\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   Copyright 2008-2017 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t// root. This will give an error otherwise\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ ) {\n\t\t\t\t$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n\t\t\t\t\trequire('jquery') :\n\t\t\t\t\trequire('jquery')( root );\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}\n(function( $, window, document, undefined ) {\n\t\"use strict\";\n\n\t/**\n\t * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n\t * flexible tool, based upon the foundations of progressive enhancement,\n\t * which will add advanced interaction controls to any HTML table. For a\n\t * full list of features please refer to\n\t * [DataTables.net](href=\"http://datatables.net).\n\t *\n\t * Note that the `DataTable` object is not a global variable but is aliased\n\t * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n\t * be  accessed.\n\t *\n\t *  @class\n\t *  @param {object} [init={}] Configuration object for DataTables. Options\n\t *    are defined by {@link DataTable.defaults}\n\t *  @requires jQuery 1.7+\n\t *\n\t *  @example\n\t *    // Basic initialisation\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *  @example\n\t *    // Initialisation with configuration options - in this case, disable\n\t *    // pagination and sorting.\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable( {\n\t *        \"paginate\": false,\n\t *        \"sort\": false\n\t *      } );\n\t *    } );\n\t */\n\tvar DataTable = function ( options )\n\t{\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).$( sSelector, oOpts );\n\t\t};\n\n\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t\t};\n\n\n\t\t/**\n\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t * the Api's context.\n\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t * @return {DataTables.Api}\n\t\t */\n\t\tthis.api = function ( traditional )\n\t\t{\n\t\t\treturn traditional ?\n\t\t\t\tnew _Api(\n\t\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t\t) :\n\t\t\t\tnew _Api( this );\n\t\t};\n\n\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using\n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function( data, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tvar rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\t\tapi.rows.add( data ) :\n\t\t\t\tapi.row.add( data );\n\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\n\t\t\treturn rows.flatten().toArray();\n\t\t};\n\n\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).on('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).columns.adjust();\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar scroll = settings.oScroll;\n\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw( false );\n\t\t\t}\n\t\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t_fnScrollDraw( settings );\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).clear();\n\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function( nTr )\n\t\t{\n\t\t\tthis.api( true ).row( nTr ).child.hide();\n\t\t};\n\n\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [callBack] Callback function\n\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function( target, callback, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar rows = api.rows( target );\n\t\t\tvar settings = rows.settings()[0];\n\t\t\tvar data = settings.aoData[ rows[0][0] ];\n\n\t\t\trows.remove();\n\n\t\t\tif ( callback ) {\n\t\t\t\tcallback.call( this, settings, data );\n\t\t\t}\n\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function ( remove )\n\t\t{\n\t\t\tthis.api( true ).destroy( remove );\n\t\t};\n\n\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function( complete )\n\t\t{\n\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t// into account the new data, but can hold position.\n\t\t\tthis.api( true ).draw( complete );\n\t\t};\n\n\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t\t{\n\t\t\tvar api = this.api( true );\n\n\t\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\n\t\t\tapi.draw();\n\t\t};\n\n\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t * provided parameters.\n\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function( src, col )\n\t\t{\n\t\t\tvar api = this.api( true );\n\n\t\t\tif ( src !== undefined ) {\n\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\n\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\t\tapi.row( src ).data() || null;\n\t\t\t}\n\n\t\t\treturn api.data().toArray();\n\t\t};\n\n\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function( iRow )\n\t\t{\n\t\t\tvar api = this.api( true );\n\n\t\t\treturn iRow !== undefined ?\n\t\t\t\tapi.row( iRow ).node() :\n\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t};\n\n\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function( node )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\n\t\t\tif ( nodeName == 'TR' ) {\n\t\t\t\treturn api.row( node ).index();\n\t\t\t}\n\t\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\t\tvar cell = api.cell( node ).index();\n\n\t\t\t\treturn [\n\t\t\t\t\tcell.row,\n\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\tcell.column\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function( nTr )\n\t\t{\n\t\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t\t};\n\n\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently\n\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t\t{\n\t\t\treturn this.api( true )\n\t\t\t\t.row( nTr )\n\t\t\t\t.child( mHtml, sClass )\n\t\t\t\t.show()\n\t\t\t\t.child()[0];\n\t\t};\n\n\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function ( mAction, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).page( mAction );\n\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw(false);\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.columns.adjust().draw();\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function()\n\t\t{\n\t\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t\t};\n\n\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t *    'display index' if you have hidden data entries\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function( aaSort )\n\t\t{\n\t\t\tthis.api( true ).order( aaSort ).draw();\n\t\t};\n\n\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t\t{\n\t\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t\t};\n\n\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t *    update a whole row.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t\t{\n\t\t\tvar api = this.api( true );\n\n\t\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\t\tapi.row( mRow ).data( mData );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t\t}\n\n\t\t\tif ( bAction === undefined || bAction ) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\n\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\n\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\n\t\tif ( emptyInit ) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tthis.oApi = this.internal = _ext.internal;\n\n\t\t// Extend with old style plug-in API methods\n\t\tfor ( var fn in DataTable.ext.internal ) {\n\t\t\tif ( fn ) {\n\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t}\n\t\t}\n\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t_fnExtend( o, options, true ) :\n\t\t\t\toptions;\n\n\t\t\t/*global oInit,_that,emptyInit*/\n\t\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\n\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts( defaults );\n\t\t\t_fnCompatCols( defaults.column );\n\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );\n\n\n\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar s = allSettings[i];\n\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif ( s.nTable == this || s.nTHead.parentNode == this || (s.nTFoot && s.nTFoot.parentNode == this) )\n\t\t\t\t{\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\n\t\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( s.sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t} );\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oApi   = _that.internal;\n\t\t\toSettings.oInit  = oInit;\n\n\t\t\tallSettings.push( oSettings );\n\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts( oInit );\n\n\t\t\tif ( oInit.oLanguage )\n\t\t\t{\n\t\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\t}\n\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t\t{\n\t\t\t\toInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t}\n\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\n\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t] );\n\t\t\t_fnMap( oSettings, oInit, [\n\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnServerData\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ],\n\t\t\t\t[ \"bJQueryUI\", \"bJUI\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\n\t\t\tvar oClasses = oSettings.oClasses;\n\n\t\t\t// @todo Remove in 1.11\n\t\t\tif ( oInit.bJQueryUI )\n\t\t\t{\n\t\t\t\t/* Use the JUI classes object for display. You could clone the oStdClasses object if\n\t\t\t\t * you want to have multiple tables with multiple independent classes\n\t\t\t\t */\n\t\t\t\t$.extend( oClasses, DataTable.ext.oJUIClasses, oInit.oClasses );\n\n\t\t\t\tif ( oInit.sDom === defaults.sDom && defaults.sDom === \"lfrtip\" )\n\t\t\t\t{\n\t\t\t\t\t/* Set the DOM to use a layout suitable for jQuery UI's theming */\n\t\t\t\t\toSettings.sDom = '<\"H\"lfr>t<\"F\"ip>';\n\t\t\t\t}\n\n\t\t\t\tif ( ! oSettings.renderer ) {\n\t\t\t\t\toSettings.renderer = 'jqueryui';\n\t\t\t\t}\n\t\t\t\telse if ( $.isPlainObject( oSettings.renderer ) && ! oSettings.renderer.header ) {\n\t\t\t\t\toSettings.renderer.header = 'jqueryui';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t\t}\n\t\t\t$this.addClass( oClasses.sTable );\n\n\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\n\t\t\tif ( oInit.iDeferLoading !== null )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = $.isArray( oInit.iDeferLoading );\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\n\t\t\t/* Language definitions */\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\n\t\t\tif ( oLanguage.sUrl )\n\t\t\t{\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\t$.ajax( {\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t\t$.extend( true, oLanguage, json );\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbInitHandedOff = true;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif ( oInit.asStripeClasses === null )\n\t\t\t{\n\t\t\t\toSettings.asStripeClasses =[\n\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t} ) ) !== -1 ) {\n\t\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif ( nThead.length !== 0 )\n\t\t\t{\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t\t}\n\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif ( oInit.aoColumns === null )\n\t\t\t{\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\n\t\t\t/* Add the columns */\n\t\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t\t}\n\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tif ( rowOne.length ) {\n\t\t\t\tvar a = function ( cell, name ) {\n\t\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t\t};\n\n\t\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\n\t\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\n\t\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\tvar loadedInit = function () {\n\t\t\t\t/*\n\t\t\t\t * Sorting\n\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t\t */\n\n\t\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t\t */\n\t\t\t\t_fnSortingClasses( oSettings );\n\n\t\t\t\tif ( features.bSort ) {\n\t\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\t\tvar sortedColumns = {};\n\n\t\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t\t}\n\t\t\t\t}, 'sc' );\n\n\n\t\t\t\t/*\n\t\t\t\t * Final init\n\t\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t\t */\n\n\t\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t\t} );\n\n\t\t\t\tvar thead = $this.children('thead');\n\t\t\t\tif ( thead.length === 0 ) {\n\t\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTHead = thead[0];\n\n\t\t\t\tvar tbody = $this.children('tbody');\n\t\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\t\ttbody = $('<tbody/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTBody = tbody[0];\n\n\t\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t\t}\n\n\t\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t\t}\n\t\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t\t}\n\n\t\t\t\t/* Check if there is data passing into the constructor */\n\t\t\t\tif ( oInit.aaData ) {\n\t\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t\t * to replace it with Ajax data\n\t\t\t\t\t */\n\t\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t\t}\n\n\t\t\t\t/* Copy the data index array */\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\n\t\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\t\toSettings.bInitialised = true;\n\n\t\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t\t * language processor)\n\t\t\t\t */\n\t\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadedInit();\n\t\t\t}\n\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\n\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\n\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_first\n\t//  _selector_row_indexes\n\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n]/g;\n\tvar _re_html = /<.*?>/g;\n\n\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t// implementations differ between browsers.\n\tvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\n\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk]/gi;\n\n\n\tvar _empty = function ( d ) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\n\n\tvar _intVal = function ( s ) {\n\t\tvar integer = parseInt( s, 10 );\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function ( num, decimalPoint ) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\t\tnum;\n\t};\n\n\n\tvar _isNumber = function ( d, decimalPoint, formatted ) {\n\t\tvar strType = typeof d === 'string';\n\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( decimalPoint && strType ) {\n\t\t\td = _numToDecimal( d, decimalPoint );\n\t\t}\n\n\t\tif ( formatted && strType ) {\n\t\t\td = d.replace( _re_formatted_numeric, '' );\n\t\t}\n\n\t\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n\t};\n\n\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function ( d ) {\n\t\treturn _empty( d ) || typeof d === 'string';\n\t};\n\n\n\tvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar html = _isHtml( d );\n\t\treturn ! html ?\n\t\t\tnull :\n\t\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\n\n\tvar _pluck = function ( a, prop, prop2 ) {\n\t\tvar out = [];\n\t\tvar i=0, ien=a.length;\n\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] ) {\n\t\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t};\n\n\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function ( a, order, prop, prop2 )\n\t{\n\t\tvar out = [];\n\t\tvar i=0, ien=order.length;\n\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t};\n\n\n\tvar _range = function ( len, start )\n\t{\n\t\tvar out = [];\n\t\tvar end;\n\n\t\tif ( start === undefined ) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t}\n\t\telse {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\n\t\tfor ( var i=start ; i<end ; i++ ) {\n\t\t\tout.push( i );\n\t\t}\n\n\t\treturn out;\n\t};\n\n\n\tvar _removeEmpty = function ( a )\n\t{\n\t\tvar out = [];\n\n\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\t\tout.push( a[i] );\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t};\n\n\n\tvar _stripHtml = function ( d ) {\n\t\treturn d.replace( _re_html, '' );\n\t};\n\n\n\t/**\n\t * Determine if all values in the array are unique. This means we can short\n\t * cut the _unique method at the cost of a single loop. A sorted array is used\n\t * to easily check the values.\n\t *\n\t * @param  {array} src Source array\n\t * @return {boolean} true if all unique, false otherwise\n\t * @ignore\n\t */\n\tvar _areAllUnique = function ( src ) {\n\t\tif ( src.length < 2 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar sorted = src.slice().sort();\n\t\tvar last = sorted[0];\n\n\t\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\t\tif ( sorted[i] === last ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlast = sorted[i];\n\t\t}\n\n\t\treturn true;\n\t};\n\n\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function ( src )\n\t{\n\t\tif ( _areAllUnique( src ) ) {\n\t\t\treturn src.slice();\n\t\t}\n\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti, ien=src.length,\n\t\t\tj, k=0;\n\n\t\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\t\tval = src[i];\n\n\t\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\t\tif ( out[j] === val ) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout.push( val );\n\t\t\tk++;\n\t\t}\n\n\t\treturn out;\n\t};\n\n\n\t/**\n\t * DataTables utility methods\n\t *\n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: function ( fn, freq ) {\n\t\t\tvar\n\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\tlast,\n\t\t\t\ttimer;\n\n\t\t\treturn function () {\n\t\t\t\tvar\n\t\t\t\t\tthat = this,\n\t\t\t\t\tnow  = +new Date(),\n\t\t\t\t\targs = arguments;\n\n\t\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\t\tclearTimeout( timer );\n\n\t\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t\t}, frequency );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} val string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: function ( val ) {\n\t\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t\t}\n\t};\n\n\n\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap ( o )\n\t{\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\n\t\t$.each( o, function (key, val) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t\t{\n\t\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\t\tmap[ newKey ] = key;\n\n\t\t\t\tif ( match[1] === 'o' )\n\t\t\t\t{\n\t\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\to._hungarianMap = map;\n\t}\n\n\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian ( src, user, force )\n\t{\n\t\tif ( ! src._hungarianMap ) {\n\t\t\t_fnHungarianMap( src );\n\t\t}\n\n\t\tvar hungarianKey;\n\n\t\t$.each( user, function (key, val) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\n\t\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t\t{\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t\t{\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\n\t\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat( lang )\n\t{\n\t\tvar defaults = DataTable.defaults.oLanguage;\n\t\tvar zeroRecords = lang.sZeroRecords;\n\n\t\t/* Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t * sZeroRecords - assuming that is given.\n\t\t */\n\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\tdefaults.sEmptyTable === \"No Courses are available\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t}\n\n\t\t/* Likewise with loading records */\n\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t}\n\n\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\tif ( lang.sInfoThousands ) {\n\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t}\n\n\t\tvar decimal = lang.sDecimal;\n\t\tif ( decimal ) {\n\t\t\t_addNumericSort( decimal );\n\t\t}\n\t}\n\n\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function ( o, knew, old ) {\n\t\tif ( o[ knew ] !== undefined ) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\n\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts ( init )\n\t{\n\t\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t\t_fnCompatMap( init, 'searching',     'bFilter' );\n\n\t\t// Boolean initialisation of x-scrolling\n\t\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif ( typeof init.scrollX === 'boolean' ) {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\n\t\tif ( searchCols ) {\n\t\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\t\tif ( searchCols[i] ) {\n\t\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols ( init )\n\t{\n\t\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\n\t\t// orderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif ( typeof dataSort === 'number' && ! $.isArray( dataSort ) ) {\n\t\t\tinit.aDataSort = [ dataSort ];\n\t\t}\n\t}\n\n\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( settings )\n\t{\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif ( ! DataTable.__browser ) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo( 'body' );\n\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\n\t\t\t// Numbers below, in order, are:\n\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t//\n\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t// element is contained without forcing scrolling\n\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\n\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\n\t\t\tn.remove();\n\t\t}\n\n\t\t$.extend( settings.oBrowser, DataTable.__browser );\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\n\n\t/**\n\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReduce ( that, fn, init, start, end, inc )\n\t{\n\t\tvar\n\t\t\ti = start,\n\t\t\tvalue,\n\t\t\tisSet = false;\n\n\t\tif ( init !== undefined ) {\n\t\t\tvalue = init;\n\t\t\tisSet = true;\n\t\t}\n\n\t\twhile ( i !== end ) {\n\t\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvalue = isSet ?\n\t\t\t\tfn( value, that[i], i, that ) :\n\t\t\t\tthat[i];\n\n\t\t\tisSet = true;\n\t\t\ti += inc;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings, nTh )\n\t{\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\n\t\t// Use the default column options function to initialise classes etc\n\t\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n\t}\n\n\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\tvar oClasses = oSettings.oClasses;\n\t\tvar th = $(oCol.nTh);\n\n\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\tif ( ! oCol.sWidthOrig ) {\n\t\t\t// Width attribute\n\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\n\t\t\t// Style attribute\n\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\tif ( t ) {\n\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t}\n\t\t}\n\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols( oOptions );\n\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions );\n\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\n\t\t\tif ( oOptions.sType )\n\t\t\t{\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t\t{\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\n\t\tvar attrTest = function( src ) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\n\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\tvar innerData = mData( rowData, type, undefined, meta );\n\n\t\t\treturn mRender && type ?\n\t\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t\t};\n\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif ( typeof mDataSrc !== 'number' ) {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t\t}\n\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t}\n\t\telse if ( bAsc && !bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t}\n\t\telse if ( !bAsc && bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t}\n\t}\n\n\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( settings )\n\t{\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif ( settings.oFeatures.bAutoWidth !== false )\n\t\t{\n\t\t\tvar columns = settings.aoColumns;\n\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t}\n\t\t}\n\n\t\tvar scroll = settings.oScroll;\n\t\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t\t{\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\n\t\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n\t}\n\n\n\t/**\n\t * Covert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\n\n\t/**\n\t * Covert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = $.inArray( iMatch, aiVis );\n\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\n\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( oSettings )\n\t{\n\t\tvar vis = 0;\n\n\t\t// No reduce in IE8, use a loop for now\n\t\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t} );\n\n\t\treturn vis;\n\t}\n\n\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\n\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\n\t\treturn a;\n\t}\n\n\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, cell, detectedType, cache;\n\n\t\t// For each column, spin over the\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\n\t\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t}\n\t\t\telse if ( ! col.sType ) {\n\t\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string\n\t\t\t\t\t\tif ( detectedType === 'html' ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif ( detectedType ) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif ( ! col.sType ) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tdef = aoColDefs[i];\n\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.targets !== undefined ?\n\t\t\t\t\tdef.targets :\n\t\t\t\t\tdef.aTargets;\n\n\t\t\t\tif ( ! $.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\taTargets = [ aTargets ];\n\t\t\t\t}\n\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Statically defined columns array\n\t\tif ( aoCols )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n\t{\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\tidx: iRow\n\t\t} );\n\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push( oData );\n\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tvar columns = oSettings.aoColumns;\n\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push( iRow );\n\n\t\tvar id = oSettings.rowIdFn( aDataIn );\n\t\tif ( id !== undefined ) {\n\t\t\toSettings.aIds[ id ] = oData;\n\t\t}\n\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t\t}\n\n\t\treturn iRow;\n\t}\n\n\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr( settings, trs )\n\t{\n\t\tvar row;\n\n\t\t// Allow an individual node to be passed in\n\t\tif ( ! (trs instanceof $) ) {\n\t\t\ttrs = $(trs);\n\t\t}\n\n\t\treturn trs.map( function (i, el) {\n\t\t\trow = _fnGetRowElements( settings, el );\n\t\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t\t} );\n\t}\n\n\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex( oSettings, n )\n\t{\n\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t}\n\n\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t{\n\t\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n\t}\n\n\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n\t{\n\t\tvar draw           = settings.iDraw;\n\t\tvar col            = settings.aoColumns[colIdx];\n\t\tvar rowData        = settings.aoData[rowIdx]._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData       = col.fnGetData( rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t} );\n\n\t\tif ( cellData === undefined ) {\n\t\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\t\tcellData = defaultContent;\n\t\t}\n\t\telse if ( typeof cellData === 'function' ) {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call( rowData );\n\t\t}\n\n\t\tif ( cellData === null && type == 'display' ) {\n\t\t\treturn '';\n\t\t}\n\t\treturn cellData;\n\t}\n\n\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n\t{\n\t\tvar col     = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\t\tcol.fnSetData( rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t}  );\n\t}\n\n\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation( str )\n\t{\n\t\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t} );\n\t}\n\n\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Build an object of get functions, and wrap them in a single call */\n\t\t\tvar o = {};\n\t\t\t$.each( mSource, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = _fnGetObjectDataFn( val );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Give an empty string for rendering / sorting etc */\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn mSource( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\n\t\t\t\tif ( src !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\n\t\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( $.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\t\t\t};\n\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[mSource];\n\t\t\t};\n\t\t}\n\t}\n\n\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn _fnSetObjectDataFn( mSource._ );\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Nothing to do when the data source is null */\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tmSource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* Like the get, we need to get data from a nested object */\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\n\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( $.isArray( val ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined )\n\t\t\t\t\t{\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) )\n\t\t\t\t{\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[mSource] = val;\n\t\t\t};\n\t\t}\n\t}\n\n\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( settings )\n\t{\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t}\n\n\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( settings )\n\t{\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\n\n\t /**\n\t * Take an array of integers (index array) and remove a target integer (value - not\n\t * the key!)\n\t *  @param {array} a Index array to target\n\t *  @param {int} iTarget value to find\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDeleteIndex( a, iTarget, splice )\n\t{\n\t\tvar iTargetIndex = -1;\n\n\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( a[i] == iTarget )\n\t\t\t{\n\t\t\t\tiTargetIndex = i;\n\t\t\t}\n\t\t\telse if ( a[i] > iTarget )\n\t\t\t{\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\n\t\tif ( iTargetIndex != -1 && splice === undefined )\n\t\t{\n\t\t\ta.splice( iTargetIndex, 1 );\n\t\t}\n\t}\n\n\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n\t{\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\tvar cellWrite = function ( cell, col ) {\n\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t// even if there is a reference to them elsewhere\n\t\t\twhile ( cell.childNodes.length ) {\n\t\t\t\tcell.removeChild( cell.firstChild );\n\t\t\t}\n\n\t\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t\t};\n\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t}\n\t\telse {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\n\t\t\tif ( cells ) {\n\t\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t// filtering is nulled out\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\n\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t// the data might have changed\n\t\tvar cols = settings.aoColumns;\n\t\tif ( colIdx !== undefined ) {\n\t\t\tcols[ colIdx ].sType = null;\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t}\n\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes( settings, row );\n\t\t}\n\t}\n\n\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements( settings, row, colIdx, d )\n\t{\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, o, i=0, contents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\n\t\tvar attr = function ( str, td  ) {\n\t\t\tif ( typeof str === 'string' ) {\n\t\t\t\tvar idx = str.indexOf('@');\n\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function ( cell ) {\n\t\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = $.trim(cell.innerHTML);\n\n\t\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\t\tsetter( d, contents );\n\n\t\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif ( objectRead ) {\n\t\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti++;\n\t\t};\n\n\t\tif ( td ) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile ( td ) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\t\tcellProcess( td );\n\t\t\t\t\ttds.push( td );\n\t\t\t\t}\n\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\n\t\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\t\tcellProcess( tds[j] );\n\t\t\t}\n\t\t}\n\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\t\tif ( rowNode ) {\n\t\t\tvar id = rowNode.getAttribute( 'id' );\n\n\t\t\tif ( id ) {\n\t\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n\t{\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen;\n\n\t\tif ( row.nTr === null )\n\t\t{\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes( oSettings, row );\n\n\t\t\t/* Process each column */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\n\t\t\t\tnTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\n\t\t\t\tcells.push( nTd );\n\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t) {\n\t\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\t}\n\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif ( oCol.sClass )\n\t\t\t\t{\n\t\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t\t}\n\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t}\n\t\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow] );\n\t\t}\n\n\t\t// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n\t\t// and deployed\n\t\trow.nTr.setAttribute( 'role', 'row' );\n\t}\n\n\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes( settings, row )\n\t{\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\n\t\tif ( tr ) {\n\t\t\tvar id = settings.rowIdFn( data );\n\n\t\t\tif ( id ) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\n\t\t\tif ( data.DT_RowClass ) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\t\ta;\n\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t\t.addClass( data.DT_RowClass );\n\t\t\t}\n\n\t\t\tif ( data.DT_RowAttr ) {\n\t\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t\t}\n\n\t\t\tif ( data.DT_RowData ) {\n\t\t\t\t$(tr).data( data.DT_RowData );\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( oSettings )\n\t{\n\t\tvar i, ien, cell, row, column;\n\t\tvar thead = oSettings.nTHead;\n\t\tvar tfoot = oSettings.nTFoot;\n\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\tvar classes = oSettings.oClasses;\n\t\tvar columns = oSettings.aoColumns;\n\n\t\tif ( createHeader ) {\n\t\t\trow = $('<tr/>').appendTo( thead );\n\t\t}\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcell = $( column.nTh ).addClass( column.sClass );\n\n\t\t\tif ( createHeader ) {\n\t\t\t\tcell.appendTo( row );\n\t\t\t}\n\n\t\t\t// 1.11 move into sorting\n\t\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\t\tcell.addClass( column.sSortingClass );\n\n\t\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\t\tcell\n\t\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\n\t\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\t\tcell.html( column.sTitle );\n\t\t\t}\n\n\t\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\t\toSettings, cell, column, classes\n\t\t\t);\n\t\t}\n\n\t\tif ( createHeader ) {\n\t\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t\t}\n\n\t\t/* ARIA role for the rows */\n\t \t$(thead).find('>tr').attr('role', 'row');\n\n\t\t/* Deal with the footer - add classes if required */\n\t\t$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );\n\t\t$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );\n\n\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t// row in the footer. If there is more than one row the user wants to\n\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t// allows cells to be used for multiple columns using colspan\n\t\tif ( tfoot !== null ) {\n\t\t\tvar cells = oSettings.aoFooter[0];\n\n\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\n\t\tif ( ! aoSource )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (  bIncludeHidden === undefined )\n\t\t{\n\t\t\tbIncludeHidden = false;\n\t\t}\n\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t{\n\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push( [] );\n\t\t}\n\n\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif ( nLocalTr )\n\t\t\t{\n\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\taApplied[i][j] = 1;\n\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings )\n\t{\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\n\t\tvar i, iLen, n;\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\tvar iStripes = asStripeClasses.length;\n\t\tvar iOpenRows = oSettings.aoOpenRows.length;\n\t\tvar oLang = oSettings.oLanguage;\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\n\t\toSettings.bDrawing = true;\n\n\t\t/* Check and see if we have an initial draw position from state saving */\n\t\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t\t{\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.bDeferLoading )\n\t\t{\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\telse if ( !bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif ( aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t\t}\n\n\t\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t{\n\t\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j] );\n\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t\t{\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t}\n\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t{\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\n\t\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t\t.append( $('<td />', {\n\t\t\t\t\t'valign':  'top',\n\t\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t\t} ).html( sZero ) )[0];\n\t\t}\n\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t\tvar body = $(oSettings.nTBody);\n\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\n\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( settings, holdPosition )\n\t{\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort     = features.bSort,\n\t\t\tfilter   = features.bFilter;\n\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\n\t\tif ( holdPosition !== true ) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\n\t\t_fnDraw( settings );\n\n\t\tsettings._drawHold = false;\n\t}\n\n\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( oSettings )\n\t{\n\t\tvar classes = oSettings.oClasses;\n\t\tvar table = $(oSettings.nTable);\n\t\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\t\tvar features = oSettings.oFeatures;\n\n\t\t// All DataTables are wrapped in a div\n\t\tvar insert = $('<div/>', {\n\t\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t\t} );\n\n\t\toSettings.nHolding = holding[0];\n\t\toSettings.nTableWrapper = insert[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t{\n\t\t\tfeatureNode = null;\n\t\t\tcOption = aDom[i];\n\n\t\t\tif ( cOption == '<' )\n\t\t\t{\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div/>')[0];\n\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i+1];\n\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t{\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\n\t\t\t\tinsert.append( nNewNode );\n\t\t\t\tinsert = $(nNewNode);\n\t\t\t}\n\t\t\telse if ( cOption == '>' )\n\t\t\t{\n\t\t\t\t/* End container div */\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\t// @todo Move options into their own plugins?\n\t\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t\t{\n\t\t\t\t/* Length */\n\t\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t\t{\n\t\t\t\t/* Filter */\n\t\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t\t{\n\t\t\t\t/* pRocessing */\n\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 't' )\n\t\t\t{\n\t\t\t\t/* Table */\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t\t{\n\t\t\t\t/* Info */\n\t\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t\t{\n\t\t\t\t/* Pagination */\n\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t}\n\t\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t\t{\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Add to the 2D features array */\n\t\t\tif ( featureNode )\n\t\t\t{\n\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\n\t\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t\t{\n\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t}\n\n\t\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\t\tinsert.append( featureNode );\n\t\t\t}\n\t\t}\n\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tholding.replaceWith( insert );\n\t\toSettings.nHolding = null;\n\t}\n\n\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( aLayout, nThead )\n\t{\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t                while ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\n\t\taLayout.splice( 0, aLayout.length );\n\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taLayout.push( [] );\n\t\t}\n\n\t\t/* Calculate a layout array */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile ( nCell ) {\n\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t{\n\t\tvar aReturn = [];\n\t\tif ( !aLayout )\n\t\t{\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif ( nHeader )\n\t\t\t{\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t}\n\t\t}\n\n\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t{\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn aReturn;\n\t}\n\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax( oSettings, data, fn )\n\t{\n\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\n\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t// come from server-side processing or serverParams\n\t\tif ( data && $.isArray(data) ) {\n\t\t\tvar tmp = {};\n\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\n\t\t\t$.each( data, function (key, val) {\n\t\t\t\tvar match = val.name.match(rbracket);\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Support for arrays\n\t\t\t\t\tvar name = match[0];\n\n\t\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdata = tmp;\n\t\t}\n\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function ( json ) {\n\t\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\t\tfn( json );\n\t\t};\n\n\t\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t\t{\n\t\t\tajaxData = ajax.data;\n\n\t\t\tvar newData = $.isFunction( ajaxData ) ?\n\t\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\t\tajaxData;                      // an object object or array to merge\n\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = $.isFunction( ajaxData ) && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend( true, data, newData );\n\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\n\t\tvar baseAjax = {\n\t\t\t\"data\": data,\n\t\t\t\"success\": function (json) {\n\t\t\t\tvar error = json.error || json.sError;\n\t\t\t\tif ( error ) {\n\t\t\t\t\t_fnLog( oSettings, 0, error );\n\t\t\t\t}\n\n\t\t\t\toSettings.json = json;\n\t\t\t\tcallback( json );\n\t\t\t},\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\n\t\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t}\n\t\t};\n\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\n\t\tif ( oSettings.fnServerData )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.fnServerData.call( instance,\n\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\treturn { name: key, value: val };\n\t\t\t\t} ),\n\t\t\t\tcallback,\n\t\t\t\toSettings\n\t\t\t);\n\t\t}\n\t\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t} ) );\n\t\t}\n\t\telse if ( $.isFunction( ajax ) )\n\t\t{\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\n\t\t\t// Restore for next time around\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\n\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( settings )\n\t{\n\t\tif ( settings.bAjaxDataGet ) {\n\t\t\tsettings.iDraw++;\n\t\t\t_fnProcessingDisplay( settings, true );\n\n\t\t\t_fnBuildAjax(\n\t\t\t\tsettings,\n\t\t\t\t_fnAjaxParameters( settings ),\n\t\t\t\tfunction(json) {\n\t\t\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request. Note that this is basically done twice, is different ways - a modern\n\t * method which is used by default in DataTables 1.10 which uses objects and\n\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t * option is set.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( settings )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tcolumnCount = columns.length,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\ti, data = [], dataProp, column, columnSearch,\n\t\t\tsort = _fnSortFlatten( settings ),\n\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1;\n\n\t\tvar param = function ( name, value ) {\n\t\t\tdata.push( { 'name': name, 'value': value } );\n\t\t};\n\n\t\t// DataTables 1.9- compatible method\n\t\tparam( 'sEcho',          settings.iDraw );\n\t\tparam( 'iColumns',       columnCount );\n\t\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\t\tparam( 'iDisplayStart',  displayStart );\n\t\tparam( 'iDisplayLength', displayLength );\n\n\t\t// DataTables 1.10+ method\n\t\tvar d = {\n\t\t\tdraw:    settings.iDraw,\n\t\t\tcolumns: [],\n\t\t\torder:   [],\n\t\t\tstart:   displayStart,\n\t\t\tlength:  displayLength,\n\t\t\tsearch:  {\n\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\tregex: preSearch.bRegex\n\t\t\t}\n\t\t};\n\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcolumnSearch = preColSearch[i];\n\t\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\n\t\t\td.columns.push( {\n\t\t\t\tdata:       dataProp,\n\t\t\t\tname:       column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable:  column.bSortable,\n\t\t\t\tsearch:     {\n\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tparam( \"mDataProp_\"+i, dataProp );\n\n\t\t\tif ( features.bFilter ) {\n\t\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t\t}\n\n\t\t\tif ( features.bSort ) {\n\t\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t\t}\n\t\t}\n\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch', preSearch.sSearch );\n\t\t\tparam( 'bRegex', preSearch.bRegex );\n\t\t}\n\n\t\tif ( features.bSort ) {\n\t\t\t$.each( sort, function ( i, val ) {\n\t\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\n\t\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t\t} );\n\n\t\t\tparam( 'iSortingCols', sort.length );\n\t\t}\n\n\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t// form to use, based on sAjaxSource\n\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\tif ( legacy === null ) {\n\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t}\n\n\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t// form\n\t\treturn legacy ? data : d;\n\t}\n\n\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( settings, json )\n\t{\n\t\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t// Support both\n\t\tvar compat = function ( old, modern ) {\n\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t};\n\n\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\tvar draw            = compat( 'sEcho',                'draw' );\n\t\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\t\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\n\t\tif ( draw ) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\n\t\t_fnClearTable( settings );\n\t\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t_fnAddData( settings, data[i] );\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t\tsettings.bAjaxDataGet = false;\n\t\t_fnDraw( settings );\n\n\t\tif ( ! settings._bInitComplete ) {\n\t\t\t_fnInitComplete( settings, json );\n\t\t}\n\n\t\tsettings.bAjaxDataGet = true;\n\t\t_fnProcessingDisplay( settings, false );\n\t}\n\n\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t *  @return {array} Array of data to use\n\t */\n\tfunction _fnAjaxDataSrc ( oSettings, json )\n\t{\n\t\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\toSettings.ajax.dataSrc :\n\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n\t\t// Compatibility with 1.9-. In order to read from aaData, check if the\n\t\t// default has been changed, if not, check for aaData\n\t\tif ( dataSrc === 'data' ) {\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter ( settings )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar features = settings.aanFeatures;\n\t\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\n\t\tvar str = language.sSearch;\n\t\tstr = str.match(/_INPUT_/) ?\n\t\t\tstr.replace('_INPUT_', input) :\n\t\t\tstr+input;\n\n\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t} )\n\t\t\t.append( $('<label/>' ).append( str ) );\n\n\t\tvar searchFn = function() {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = features.f;\n\t\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive\n\t\t\t\t} );\n\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t};\n\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t\t400 :\n\t\t\t\t0;\n\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val( previousSearch.sSearch )\n\t\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t\t.on(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.on( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.attr('aria-controls', tableId);\n\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame...\n\t\t\t\ttry {\n\t\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch ( e ) {}\n\t\t\t}\n\t\t} );\n\n\t\treturn filter[0];\n\t}\n\n\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t{\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t};\n\t\tvar fnRegex = function ( o ) {\n\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t};\n\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t_fnColumnTypes( oSettings );\n\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\n\t\t\tfnSaveFilter( oInput );\n\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t}\n\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfnSaveFilter( oInput );\n\t\t}\n\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n\t}\n\n\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( settings )\n\t{\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\n\t\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\t\tvar rows = [];\n\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\n\t\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\t\trows.push( rowIdx );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t$.merge( displayRows, rows );\n\t\t}\n\t}\n\n\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n\t{\n\t\tif ( searchStr === '' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar data;\n\t\tvar out = [];\n\t\tvar display = settings.aiDisplay;\n\t\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\n\t\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\n\t\t\tif ( rpSearch.test( data ) ) {\n\t\t\t\tout.push( display[i] );\n\t\t\t}\n\t\t}\n\n\t\tsettings.aiDisplay = out;\n\t}\n\n\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} input string to filter on\n\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} regex treat as a regular expression or not\n\t *  @param {bool} smart perform smart filtering or not\n\t *  @param {bool} caseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n\t{\n\t\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\tvar display, invalidated, i;\n\t\tvar filtered = [];\n\n\t\t// Need to take account of custom filtering functions - always filter\n\t\tif ( DataTable.ext.search.length !== 0 ) {\n\t\t\tforce = true;\n\t\t}\n\n\t\t// Check if any of the rows were invalidated\n\t\tinvalidated = _fnFilterData( settings );\n\n\t\t// If the input is blank - we just want the full data set\n\t\tif ( input.length <= 0 ) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\t\telse {\n\t\t\t// New search - start from the master array\n\t\t\tif ( invalidated ||\n\t\t\t\t force ||\n\t\t\t\t prevSearch.length > input.length ||\n\t\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t\t                  // re-filtered since indexes will have changed\n\t\t\t) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\n\t\t\t// Search the display array\n\t\t\tdisplay = settings.aiDisplay;\n\n\t\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\t\tfiltered.push( display[i] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsettings.aiDisplay = filtered;\n\t\t}\n\t}\n\n\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n\t{\n\t\tsearch = regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex( search );\n\n\t\tif ( smart ) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t * generate:\n\t\t\t *\n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\n\t\t\t\treturn word.replace('\"', '');\n\t\t\t} );\n\n\t\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t\t}\n\n\t\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n\t}\n\n\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\tfunction _fnFilterData ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar column;\n\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\tvar fomatters = DataTable.ext.type.search;\n\t\tvar wasInvalidated = false;\n\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\n\t\t\tif ( ! row._aFilterData ) {\n\t\t\t\tfilterData = [];\n\n\t\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\t\tcolumn = columns[j];\n\n\t\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\n\t\t\t\t\t\tif ( fomatters[ column.sType ] ) {\n\t\t\t\t\t\t\tcellData = fomatters[ column.sType ]( cellData );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n]/g, '');\n\t\t\t\t\t}\n\n\t\t\t\t\tfilterData.push( cellData );\n\t\t\t\t}\n\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\n\t\treturn wasInvalidated;\n\t}\n\n\n\t/**\n\t * Convert from the internal Hungarian notation to camelCase for external\n\t * interaction\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToCamel ( obj )\n\t{\n\t\treturn {\n\t\t\tsearch:          obj.sSearch,\n\t\t\tsmart:           obj.bSmart,\n\t\t\tregex:           obj.bRegex,\n\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t};\n\t}\n\n\n\n\t/**\n\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t * Hungarian convert function here, but this is cleaner\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToHung ( obj )\n\t{\n\t\treturn {\n\t\t\tsSearch:          obj.search,\n\t\t\tbSmart:           obj.smart,\n\t\t\tbRegex:           obj.regex,\n\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t};\n\t}\n\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo ( settings )\n\t{\n\t\tvar\n\t\t\ttid = settings.sTableId,\n\t\t\tnodes = settings.aanFeatures.i,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t\t} );\n\n\t\tif ( ! nodes ) {\n\t\t\t// Update display on each draw\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t} );\n\n\t\t\tn\n\t\t\t\t.attr( 'role', 'status' )\n\t\t\t\t.attr( 'aria-live', 'polite' );\n\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t\t}\n\n\t\treturn n[0];\n\t}\n\n\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( settings )\n\t{\n\t\t/* Show information about the table */\n\t\tvar nodes = settings.aanFeatures.i;\n\t\tif ( nodes.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar\n\t\t\tlang  = settings.oLanguage,\n\t\t\tstart = settings._iDisplayStart+1,\n\t\t\tend   = settings.fnDisplayEnd(),\n\t\t\tmax   = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout   = total ?\n\t\t\t\tlang.sInfo :\n\t\t\t\tlang.sInfoEmpty;\n\n\t\tif ( total !== max ) {\n\t\t\t/* Record set after filtering */\n\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t}\n\n\t\t// Convert the macros\n\t\tout += lang.sInfoPostFix;\n\t\tout = _fnInfoMacros( settings, out );\n\n\t\tvar callback = lang.fnInfoCallback;\n\t\tif ( callback !== null ) {\n\t\t\tout = callback.call( settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\n\t\t$(nodes).html( out );\n\t}\n\n\n\tfunction _fnInfoMacros ( settings, str )\n\t{\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tvar\n\t\t\tformatter  = settings.fnFormatNumber,\n\t\t\tstart      = settings._iDisplayStart+1,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvis        = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n\t}\n\n\n\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( settings )\n\t{\n\t\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\t\tvar columns = settings.aoColumns, column;\n\t\tvar features = settings.oFeatures;\n\t\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif ( ! settings.bInitialised ) {\n\t\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml( settings );\n\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead( settings );\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t/* Calculate sizes for columns */\n\t\tif ( features.bAutoWidth ) {\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t}\n\n\t\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\t\tcolumn = columns[i];\n\n\t\t\tif ( column.sWidth ) {\n\t\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t\t}\n\t\t}\n\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t\t_fnReDraw( settings );\n\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( settings, json )\n\t{\n\t\tsettings._bInitComplete = true;\n\n\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t// calculate the column sizing\n\t\tif ( json || settings.oInit.aaData ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}\n\n\t\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n\t}\n\n\n\tfunction _fnLengthChange ( settings, val )\n\t{\n\t\tvar len = parseInt( val, 10 );\n\t\tsettings._iDisplayLength = len;\n\n\t\t_fnLengthOverflow( settings );\n\n\t\t// Fire length change event\n\t\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n\t}\n\n\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength ( settings )\n\t{\n\t\tvar\n\t\t\tclasses  = settings.oClasses,\n\t\t\ttableId  = settings.sTableId,\n\t\t\tmenu     = settings.aLengthMenu,\n\t\t\td2       = $.isArray( menu[0] ),\n\t\t\tlengths  = d2 ? menu[0] : menu,\n\t\t\tlanguage = d2 ? menu[1] : menu;\n\n\t\tvar select = $('<select/>', {\n\t\t\t'name':          tableId+'_length',\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.sLengthSelect\n\t\t} );\n\n\t\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\t\tselect[0][ i ] = new Option( language[i], lengths[i] );\n\t\t}\n\n\t\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\t\tif ( ! settings.aanFeatures.l ) {\n\t\t\tdiv[0].id = tableId+'_length';\n\t\t}\n\n\t\tdiv.children().append(\n\t\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t\t);\n\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val( settings._iDisplayLength )\n\t\t\t.on( 'change.DT', function(e) {\n\t\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t\t_fnDraw( settings );\n\t\t\t} );\n\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t$('select', div).val( len );\n\t\t\t}\n\t\t} );\n\n\t\treturn div[0];\n\t}\n\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in\n\t * DataTable.ext.pager\n\t */\n\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate ( settings )\n\t{\n\t\tvar\n\t\t\ttype   = settings.sPaginationType,\n\t\t\tplugin = DataTable.ext.pager[ type ],\n\t\t\tmodern = typeof plugin === 'function',\n\t\t\tredraw = function( settings ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t},\n\t\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\t\tfeatures = settings.aanFeatures;\n\n\t\tif ( ! modern ) {\n\t\t\tplugin.fnInit( settings, node, redraw );\n\t\t}\n\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif ( ! features.p )\n\t\t{\n\t\t\tnode.id = settings.sTableId+'_paginate';\n\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": function( settings ) {\n\t\t\t\t\tif ( modern ) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\ti, ien;\n\n\t\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t} );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( settings, action, redraw )\n\t{\n\t\tvar\n\t\t\tstart     = settings._iDisplayStart,\n\t\t\tlen       = settings._iDisplayLength,\n\t\t\trecords   = settings.fnRecordsDisplay();\n\n\t\tif ( records === 0 || len === -1 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( typeof action === \"number\" )\n\t\t{\n\t\t\tstart = action * len;\n\n\t\t\tif ( start > records )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"first\" )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( action == \"previous\" )\n\t\t{\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\n\t\t\tif ( start < 0 )\n\t\t\t{\n\t\t\t  start = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"next\" )\n\t\t{\n\t\t\tif ( start + len < records )\n\t\t\t{\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"last\" )\n\t\t{\n\t\t\tstart = Math.floor( (records-1) / len) * len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t\t}\n\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\n\t\tif ( changed ) {\n\t\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\n\t\t\tif ( redraw ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n\n\n\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing ( settings )\n\t{\n\t\treturn $('<div/>', {\n\t\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.insertBefore( settings.nTable )[0];\n\t}\n\n\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings dataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay ( settings, show )\n\t{\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t\t}\n\n\t\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n\t}\n\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( settings )\n\t{\n\t\tvar table = $(settings.nTable);\n\n\t\t// Add the ARIA grid role to the table\n\t\ttable.attr( 'role', 'grid' );\n\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\n\t\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\t\treturn settings.nTable;\n\t\t}\n\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses;\n\t\tvar caption = table.children('caption');\n\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\tvar headerClone = $( table[0].cloneNode(false) );\n\t\tvar footerClone = $( table[0].cloneNode(false) );\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function ( s ) {\n\t\t\treturn !s ? null : _fnStringToCss( s );\n\t\t};\n\n\t\tif ( ! footer.length ) {\n\t\t\tfooter = null;\n\t\t}\n\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t\t} )\n\t\t\t\t\t.append( table )\n\t\t\t);\n\n\t\tif ( footer ) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\tif ( scrollX ) {\n\t\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\t\tvar scrollLeft = this.scrollLeft;\n\n\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\t\t\tif ( footer ) {\n\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t$(scrollBody).css(\n\t\t\tscrollY && scroll.bCollapse ? 'max-height' : 'height',\n\t\t\tscrollY\n\t\t);\n\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t} );\n\n\t\treturn scroller[0];\n\t}\n\n\n\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements to align the columns\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( settings )\n\t{\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll         = settings.oScroll,\n\t\t\tscrollX        = scroll.sX,\n\t\t\tscrollXInner   = scroll.sXInner,\n\t\t\tscrollY        = scroll.sY,\n\t\t\tbarWidth       = scroll.iBarWidth,\n\t\t\tdivHeader      = $(settings.nScrollHead),\n\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl      = settings.nScrollBody,\n\t\t\tdivBody        = $(divBodyEl),\n\t\t\tdivBodyStyle   = divBodyEl.style,\n\t\t\tdivFooter      = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader         = $(settings.nTHead),\n\t\t\ttable          = $(settings.nTable),\n\t\t\ttableEl        = table[0],\n\t\t\ttableStyle     = tableEl.style,\n\t\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\tbrowser        = settings.oBrowser,\n\t\t\tie67           = browser.bScrollOversize,\n\t\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\t\theaderTrgEls, footerTrgEls,\n\t\t\theaderSrcEls, footerSrcEls,\n\t\t\theaderCopy, footerCopy,\n\t\t\theaderWidths=[], footerWidths=[],\n\t\t\theaderContent=[], footerContent=[],\n\t\t\tidx, correction, sanityWidth,\n\t\t\tzeroOut = function(nSizer) {\n\t\t\t\tvar style = nSizer.style;\n\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\tstyle.height = 0;\n\t\t\t};\n\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\n\t\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\treturn; // adjust column sizing will call this function again\n\t\t}\n\t\telse {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\n\t\t/*\n\t\t * 1. Re-create the table inside the scrolling div\n\t\t */\n\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\n\t\tif ( footer ) {\n\t\t\tfooterCopy = footer.clone().prependTo( table );\n\t\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t}\n\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo( table );\n\t\theaderTrgEls = header.find('tr'); // original header is in its own table\n\t\theaderSrcEls = headerCopy.find('tr');\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\n\n\t\t/*\n\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t */\n\n\t\t// Remove old sizing and apply the calculated column widths\n\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t// calculated sizes to this header\n\t\tif ( ! scrollX )\n\t\t{\n\t\t\tdivBodyStyle.width = '100%';\n\t\t\tdivHeader[0].style.width = '100%';\n\t\t}\n\n\t\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t} );\n\n\t\tif ( footer ) {\n\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\tn.style.width = \"\";\n\t\t\t}, footerSrcEls );\n\t\t}\n\n\t\t// Size the table as a whole\n\t\tsanityWidth = table.outerWidth();\n\t\tif ( scrollX === \"\" ) {\n\t\t\t// No x scrolling\n\t\t\ttableStyle.width = \"100%\";\n\n\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t// into account.\n\t\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t\t}\n\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\telse if ( scrollXInner !== \"\" ) {\n\t\t\t// legacy x scroll inner has been given - use it\n\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\n\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t// set the width based on the real headers\n\n\t\t// Apply all styles in one pass\n\t\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\n\t\t// Read all widths in next pass\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\theaderContent.push( nSizer.innerHTML );\n\t\t\theaderWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, headerSrcEls );\n\n\t\t// Apply all widths in final pass\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t// Only apply widths to the DataTables detected header cells - this\n\t\t\t// prevents complex headers from having contradictory sizes applied\n\t\t\tif ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {\n\t\t\t\tnToSize.style.width = headerWidths[i];\n\t\t\t}\n\t\t}, headerTrgEls );\n\n\t\t$(headerSrcEls).height(0);\n\n\t\t/* Same again with the footer if we have one */\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\n\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t\t}, footerSrcEls );\n\n\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t}, footerTrgEls );\n\n\t\t\t$(footerSrcEls).height(0);\n\t\t}\n\n\n\t\t/*\n\t\t * 3. Apply the measurements\n\t\t */\n\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t// width to what they currently are\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+headerContent[i]+'</div>';\n\t\t\tnSizer.style.width = headerWidths[i];\n\t\t}, headerSrcEls );\n\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">'+footerContent[i]+'</div>';\n\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t}, footerSrcEls );\n\t\t}\n\n\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\tif ( table.outerWidth() < sanityWidth )\n\t\t{\n\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth+barWidth :\n\t\t\t\t\tsanityWidth;\n\n\t\t\t// IE6/7 are a law unto themselves...\n\t\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t\t}\n\n\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcorrection = '100%';\n\t\t}\n\n\t\t// Apply to the container elements\n\t\tdivBodyStyle.width = _fnStringToCss( correction );\n\t\tdivHeaderStyle.width = _fnStringToCss( correction );\n\n\t\tif ( footer ) {\n\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t\t}\n\n\n\t\t/*\n\t\t * 4. Clean up\n\t\t */\n\t\tif ( ! scrollY ) {\n\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t */\n\t\t\tif ( ie67 ) {\n\t\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t\t}\n\t\t}\n\n\t\t/* Finally set the width's of the header and footer tables */\n\t\tvar iOuterWidth = table.outerWidth();\n\t\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\t\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\n\t\tif ( footer ) {\n\t\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\t}\n\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').insertBefore( table.children('thead') );\n\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\tdivBody.scroll();\n\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t{\n\t\tvar index=0, i=0, iLen=an1.length;\n\t\tvar nNode1, nNode2;\n\n\t\twhile ( i < iLen ) {\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\n\t\t\twhile ( nNode1 ) {\n\t\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\t\tif ( an2 ) {\n\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t}\n\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}\n\n\n\n\tvar __re_html_remove = /<.*?>/g;\n\n\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( oSettings )\n\t{\n\t\tvar\n\t\t\ttable = oSettings.nTable,\n\t\t\tcolumns = oSettings.aoColumns,\n\t\t\tscroll = oSettings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tcolumnCount = columns.length,\n\t\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\tuserInputs = false,\n\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\tbrowser = oSettings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize;\n\n\t\tvar styleWidth = table.style.width;\n\t\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\t\tif ( column.sWidth !== null ) {\n\t\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\n\t\t\t\tuserInputs = true;\n\t\t\t}\n\t\t}\n\n\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t * nor scrolling used\n\t\t */\n\t\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t\t     columnCount == headerCells.length\n\t\t) {\n\t\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\n\t\t\t\tif ( colIdx !== null ) {\n\t\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t// table widths\n\t\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t\t.removeAttr( 'id' );\n\n\t\t\t// Clean up the table body\n\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\n\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t// real header and footer are contained in different table tags\n\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\ttmpTable\n\t\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t\t.append( $(oSettings.nTFoot).clone() );\n\n\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t\t\t// Apply custom sizing to the cloned header\n\t\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t\t'';\n\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\tif ( oSettings.aoData.length ) {\n\t\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\tcolumn = columns[ columnIdx ];\n\n\t\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t\t.clone( false )\n\t\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t\t.appendTo( tr );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t$('[name]', tmpTable).removeAttr('name');\n\n\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t// needed\n\t\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.append( tmpTable )\n\t\t\t\t.appendTo( tableContainer );\n\n\t\t\t// When scrolling (X or Y) we want to set the width of the table as\n\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\tif ( scrollX && scrollXInner ) {\n\t\t\t\ttmpTable.width( scrollXInner );\n\t\t\t}\n\t\t\telse if ( scrollX ) {\n\t\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\t\ttmpTable.removeAttr('width');\n\n\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t// collapse\n\t\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( scrollY ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t\telse if ( tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableWidthAttr );\n\t\t\t}\n\n\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t// need to be modified.\n\t\t\tvar total = 0;\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\n\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\t\tcell.outerWidth();\n\n\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\ttotal += bounding;\n\n\t\t\t\t// Width for each column to use\n\t\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t\t}\n\n\t\t\ttable.style.width = _fnStringToCss( total );\n\n\t\t\t// Finished with the table - ditch it\n\t\t\tholder.remove();\n\t\t}\n\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif ( tableWidthAttr ) {\n\t\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t\t}\n\n\t\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\t\tvar bindResize = function () {\n\t\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\t} ) );\n\t\t\t};\n\n\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\tif ( ie67 ) {\n\t\t\t\tsetTimeout( bindResize, 1000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbindResize();\n\t\t\t}\n\n\t\t\toSettings._reszEvt = true;\n\t\t}\n\t}\n\n\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained for\n\t * the throttled function\n\t *  @param {function} fn Function to be called\n\t *  @param {int} [freq=200] call frequency in mS\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnThrottle = DataTable.util.throttle;\n\n\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} width width to be converted\n\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth ( width, parent )\n\t{\n\t\tif ( ! width ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar n = $('<div/>')\n\t\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t\t.appendTo( parent || document.body );\n\n\t\tvar val = n[0].offsetWidth;\n\t\tn.remove();\n\n\t\treturn val;\n\t}\n\n\n\t/**\n\t * Get the widest node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode( settings, colIdx )\n\t{\n\t\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\t\tif ( idx < 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar data = settings.aoData[ idx ];\n\t\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\t\tdata.anCells[ colIdx ];\n\t}\n\n\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( settings, colIdx )\n\t{\n\t\tvar s, max=-1, maxIdx = -1;\n\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\t\ts = s.replace( __re_html_remove, '' );\n\t\t\ts = s.replace( /&nbsp;/g, ' ' );\n\n\t\t\tif ( s.length > max ) {\n\t\t\t\tmax = s.length;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\n\t\treturn maxIdx;\n\t}\n\n\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null ) {\n\t\t\treturn '0px';\n\t\t}\n\n\t\tif ( typeof s == 'number' ) {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts+'px';\n\t\t}\n\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts+'px' :\n\t\t\ts;\n\t}\n\n\n\n\tfunction _fnSortFlatten ( settings )\n\t{\n\t\tvar\n\t\t\ti, iLen, k, kLen,\n\t\t\taSort = [],\n\t\t\taiOrig = [],\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject( fixed ),\n\t\t\tnestedSort = [],\n\t\t\tadd = function ( a ) {\n\t\t\t\tif ( a.length && ! $.isArray( a[0] ) ) {\n\t\t\t\t\t// 1D array\n\t\t\t\t\tnestedSort.push( a );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// 2D array\n\t\t\t\t\t$.merge( nestedSort, a );\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif ( $.isArray( fixed ) ) {\n\t\t\tadd( fixed );\n\t\t}\n\n\t\tif ( fixedObj && fixed.pre ) {\n\t\t\tadd( fixed.pre );\n\t\t}\n\n\t\tadd( settings.aaSorting );\n\n\t\tif (fixedObj && fixed.post ) {\n\t\t\tadd( fixed.post );\n\t\t}\n\n\t\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t\t{\n\t\t\tsrcCol = nestedSort[i][0];\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t\t}\n\n\t\t\t\taSort.push( {\n\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\tcol:       iCol,\n\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\ttype:      sType,\n\t\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\treturn aSort;\n\t}\n\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t *  @todo This really needs split up!\n\t */\n\tfunction _fnSort ( oSettings )\n\t{\n\t\tvar\n\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taiOrig = [],\n\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\tformatters = 0,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t//   data is going to be used in the table?\n\t\t_fnColumnTypes( oSettings );\n\n\t\taSort = _fnSortFlatten( oSettings );\n\n\t\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\t\tsortCol = aSort[i];\n\n\t\t\t// Track if we can use the fast sort algorithm\n\t\t\tif ( sortCol.formatter ) {\n\t\t\t\tformatters++;\n\t\t\t}\n\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData( oSettings, sortCol.col );\n\t\t}\n\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t\t{\n\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t\t}\n\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var iTest;\n\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (iTest !== 0)\n\t\t\t *        return iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *      return iTest;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t *\n\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t */\n\t\t\tif ( formatters === aSort.length ) {\n\t\t\t\t// All sort types have formatting functions\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t// methods.\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t}\n\n\n\tfunction _fnSortAria ( settings )\n\t{\n\t\tvar label;\n\t\tvar nextSort;\n\t\tvar columns = settings.aoColumns;\n\t\tvar aSort = _fnSortFlatten( settings );\n\t\tvar oAria = settings.oLanguage.oAria;\n\n\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t// attributes as needed)\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar col = columns[i];\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar sTitle = col.sTitle.replace( /<.*?>/g, \"\" );\n\t\t\tvar th = col.nTh;\n\n\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t// attr() and removeAttr() methods...\n\t\t\tth.removeAttribute('aria-sort');\n\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif ( col.bSortable ) {\n\t\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t}\n\n\t\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\toAria.sSortDescending\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlabel = sTitle;\n\t\t\t}\n\n\t\t\tth.setAttribute('aria-label', label);\n\t\t}\n\t}\n\n\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t *    sort if true (i.e. multi-column sort)\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortListener ( settings, colIdx, append, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function ( a, overflow ) {\n\t\t\tvar idx = a._idx;\n\t\t\tif ( idx === undefined ) {\n\t\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t\t}\n\n\t\t\treturn idx+1 < asSorting.length ?\n\t\t\t\tidx+1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\n\t\t// Convert to 2D array if needed\n\t\tif ( typeof sorting[0] === 'number' ) {\n\t\t\tsorting = settings.aaSorting = [ sorting ];\n\t\t}\n\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\n\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\n\t\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t}\n\n\t\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No sort on this column yet\n\t\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next( sorting[0] );\n\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t}\n\t\telse {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\n\t\t// Run the sort by calling a full redraw\n\t\t_fnReDraw( settings );\n\n\t\t// callback used for async user interaction\n\t\tif ( typeof callback == 'function' ) {\n\t\t\tcallback( settings );\n\t\t}\n\t}\n\n\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\n\t\t_fnBindAction( attachTo, {}, function (e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif ( col.bSortable === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t\t_fnProcessingDisplay( settings, true );\n\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\n\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t// processing display\n\t\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t\t}\n\t\t} );\n\t}\n\n\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( settings )\n\t{\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\tvar sort = _fnSortFlatten( settings );\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\n\t\tif ( features.bSort && features.bSortClasses ) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t\t// Remove column sorting\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\n\t\t\t// Add new column sorting\n\t\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = sort[i].src;\n\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\t}\n\n\t\tsettings.aLastSort = sort;\n\t}\n\n\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\tfunction _fnSortData( settings, idx )\n\t{\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ idx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\n\t\tif ( customSort ) {\n\t\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t\t);\n\t\t}\n\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\n\t\t\tif ( ! row._aSortData ) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\n\t\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\n\t\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\t\tformatter( cellData ) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Save the state of a table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState ( settings )\n\t{\n\t\tif ( !settings.oFeatures.bStateSave || settings.bDestroying )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t/* Store the interesting variables */\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t\t};\n\t\t\t} )\n\t\t};\n\n\t\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\n\t\tsettings.oSavedState = state;\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\n\n\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @param {function} callback Callback to execute when the state has been loaded\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( settings, oInit, callback )\n\t{\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\tvar loaded = function ( s ) {\n\t\t\tif ( ! s || ! s.time ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t\t// cancelling of loading by returning false\n\t\t\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\t\t\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Reject old data\n\t\t\tvar duration = settings.iStateDuration;\n\t\t\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\t\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Store the saved state so it might be accessed at any time\n\t\t\tsettings.oLoadedState = $.extend( true, {}, s );\n\n\t\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t\t// subscribed events\n\t\t\tif ( s.start !== undefined ) {\n\t\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t}\n\t\t\tif ( s.length !== undefined ) {\n\t\t\t\tsettings._iDisplayLength   = s.length;\n\t\t\t}\n\n\t\t\t// Order\n\t\t\tif ( s.order !== undefined ) {\n\t\t\t\tsettings.aaSorting = [];\n\t\t\t\t$.each( s.order, function ( i, col ) {\n\t\t\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t\t\t[ 0, col[1] ] :\n\t\t\t\t\t\tcol\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Search\n\t\t\tif ( s.search !== undefined ) {\n\t\t\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t\t\t}\n\n\t\t\t// Columns\n\t\t\t//\n\t\t\tif ( s.columns ) {\n\t\t\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\t\t\tvar col = s.columns[i];\n\n\t\t\t\t\t// Visibility\n\t\t\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Search\n\t\t\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\t\t\tcallback();\n\t\t}\n\n\t\tif ( ! settings.oFeatures.bStateSave ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\n\t\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\n\t\tif ( state !== undefined ) {\n\t\t\tloaded( state );\n\t\t}\n\t\t// otherwise, wait for the loaded callback to be executed\n\t}\n\n\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} table table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode ( table )\n\t{\n\t\tvar settings = DataTable.settings;\n\t\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\n\t\treturn idx !== -1 ?\n\t\t\tsettings[ idx ] :\n\t\t\tnull;\n\t}\n\n\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( settings, level, msg, tn )\n\t{\n\t\tmsg = 'DataTables warning: '+\n\t\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\n\t\tif ( tn ) {\n\t\t\tmsg += '. For more information about this error, please see '+\n\t\t\t'http://datatables.net/tn/'+tn;\n\t\t}\n\n\t\tif ( ! level  ) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\t\tif ( settings ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t\t}\n\n\t\t\tif ( type == 'alert' ) {\n\t\t\t\talert( msg );\n\t\t\t}\n\t\t\telse if ( type == 'throw' ) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\telse if ( typeof type == 'function' ) {\n\t\t\t\ttype( settings, tn, msg );\n\t\t\t}\n\t\t}\n\t\telse if ( window.console && console.log ) {\n\t\t\tconsole.log( msg );\n\t\t}\n\t}\n\n\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( ret, src, name, mappedName )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\t$.each( name, function (i, val) {\n\t\t\t\tif ( $.isArray( val ) ) {\n\t\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnMap( ret, src, val );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( mappedName === undefined ) {\n\t\t\tmappedName = name;\n\t\t}\n\n\t\tif ( src[name] !== undefined ) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\n\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( out, extender, breakRefs )\n\t{\n\t\tvar val;\n\n\t\tfor ( var prop in extender ) {\n\t\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\t\tval = extender[prop];\n\n\t\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t\t}\n\t\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, oData, fn )\n\t{\n\t\t$(n)\n\t\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t\tn.blur(); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t} )\n\t\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t} );\n\t}\n\n\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t{\n\t\tif ( fn )\n\t\t{\n\t\t\toSettings[sStore].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t} );\n\t\t}\n\t}\n\n\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n\t{\n\t\tvar ret = [];\n\n\t\tif ( callbackArr ) {\n\t\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t\t} );\n\t\t}\n\n\t\tif ( eventName !== null ) {\n\t\t\tvar e = $.Event( eventName+'.dt' );\n\n\t\t\t$(settings.nTable).trigger( e, args );\n\n\t\t\tret.push( e.result );\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\n\tfunction _fnLengthOverflow ( settings )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif ( start >= end )\n\t\t{\n\t\t\tstart = end - len;\n\t\t}\n\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\n\t\tif ( len === -1 || start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\n\t\tsettings._iDisplayStart = start;\n\t}\n\n\n\tfunction _fnRenderer( settings, type )\n\t{\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\n\t\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t}\n\t\telse if ( typeof renderer === 'string' ) {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\n\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource ( settings )\n\t{\n\t\tif ( settings.oFeatures.bServerSide ) {\n\t\t\treturn 'ssp';\n\t\t}\n\t\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\n\n\n\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\n\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\n\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function ( mixed )\n\t{\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = $.map( settings, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\n\t\tif ( ! mixed ) {\n\t\t\treturn [];\n\t\t}\n\t\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t\t// DataTables settings object\n\t\t\treturn [ mixed ];\n\t\t}\n\t\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t\t// Table node\n\t\t\tidx = $.inArray( mixed, tables );\n\t\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t\t}\n\t\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\t\treturn mixed.settings().toArray();\n\t\t}\n\t\telse if ( typeof mixed === 'string' ) {\n\t\t\t// jQuery selector\n\t\t\tjq = $(mixed);\n\t\t}\n\t\telse if ( mixed instanceof $ ) {\n\t\t\t// jQuery object (also DataTables instance)\n\t\t\tjq = mixed;\n\t\t}\n\n\t\tif ( jq ) {\n\t\t\treturn jq.map( function(i) {\n\t\t\t\tidx = $.inArray( this, tables );\n\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t} ).toArray();\n\t\t}\n\t};\n\n\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function ( context, data )\n\t{\n\t\tif ( ! (this instanceof _Api) ) {\n\t\t\treturn new _Api( context, data );\n\t\t}\n\n\t\tvar settings = [];\n\t\tvar ctxSettings = function ( o ) {\n\t\t\tvar a = _toSettings( o );\n\t\t\tif ( a ) {\n\t\t\t\tsettings = settings.concat( a );\n\t\t\t}\n\t\t};\n\n\t\tif ( $.isArray( context ) ) {\n\t\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tctxSettings( context[i] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tctxSettings( context );\n\t\t}\n\n\t\t// Remove duplicates\n\t\tthis.context = _unique( settings );\n\n\t\t// Initial data\n\t\tif ( data ) {\n\t\t\t$.merge( this, data );\n\t\t}\n\n\t\t// selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\n\t\t_Api.extend( this, this, __apiStruct );\n\t};\n\n\tDataTable.Api = _Api;\n\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend( _Api.prototype, {\n\t\tany: function ()\n\t\t{\n\t\t\treturn this.count() !== 0;\n\t\t},\n\n\n\t\tconcat:  __arrayProto.concat,\n\n\n\t\tcontext: [], // array of table settings objects\n\n\n\t\tcount: function ()\n\t\t{\n\t\t\treturn this.flatten().length;\n\t\t},\n\n\n\t\teach: function ( fn )\n\t\t{\n\t\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\t\tfn.call( this, this[i], i, this );\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\n\t\teq: function ( idx )\n\t\t{\n\t\t\tvar ctx = this.context;\n\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\t\tnull;\n\t\t},\n\n\n\t\tfilter: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\n\t\t\tif ( __arrayProto.filter ) {\n\t\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\t\ta.push( this[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\n\n\t\tflatten: function ()\n\t\t{\n\t\t\tvar a = [];\n\t\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t\t},\n\n\n\t\tjoin:    __arrayProto.join,\n\n\n\t\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t\t{\n\t\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( this[i] === obj ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\n\t\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\t\tvar\n\t\t\t\ta = [], ret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\n\t\t\t// Argument shifting\n\t\t\tif ( typeof flatten === 'string' ) {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\n\t\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tvar apiInst = new _Api( context[i] );\n\n\t\t\t\tif ( type === 'table' ) {\n\t\t\t\t\tret = fn.call( apiInst, context[i], i );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\n\t\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\t\titem = items[j];\n\n\t\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( a.length || alwaysNew ) {\n\t\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\n\t\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t\t{\n\t\t\t// Bit cheeky...\n\t\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t\t},\n\n\n\t\tlength:  0,\n\n\n\t\tmap: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\n\t\t\tif ( __arrayProto.map ) {\n\t\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\n\n\t\tpluck: function ( prop )\n\t\t{\n\t\t\treturn this.map( function ( el ) {\n\t\t\t\treturn el[ prop ];\n\t\t\t} );\n\t\t},\n\n\t\tpop:     __arrayProto.pop,\n\n\n\t\tpush:    __arrayProto.push,\n\n\n\t\t// Does not return an API instance\n\t\treduce: __arrayProto.reduce || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t\t},\n\n\n\t\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t\t},\n\n\n\t\treverse: __arrayProto.reverse,\n\n\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\n\n\t\tshift:   __arrayProto.shift,\n\n\n\t\tslice: function () {\n\t\t\treturn new _Api( this.context, this );\n\t\t},\n\n\n\t\tsort:    __arrayProto.sort, // ? name - order?\n\n\n\t\tsplice:  __arrayProto.splice,\n\n\n\t\ttoArray: function ()\n\t\t{\n\t\t\treturn __arrayProto.slice.call( this );\n\t\t},\n\n\n\t\tto$: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\n\n\t\ttoJQuery: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\n\n\t\tunique: function ()\n\t\t{\n\t\t\treturn new _Api( this.context, _unique(this) );\n\t\t},\n\n\n\t\tunshift: __arrayProto.unshift\n\t} );\n\n\n\t_Api.extend = function ( scope, obj, ext )\n\t{\n\t\t// Only extend API instances and static properties of the API\n\t\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar\n\t\t\ti, ien,\n\t\t\tj, jen,\n\t\t\tstruct, inner,\n\t\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\t\treturn function () {\n\t\t\t\t\tvar ret = fn.apply( scope, arguments );\n\n\t\t\t\t\t// Method extension\n\t\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\t\t\t};\n\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tstruct = ext[i];\n\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = typeof struct.val === 'function' ?\n\t\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\t\t$.isPlainObject( struct.val ) ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\n\t\t\t// Property extension\n\t\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t\t}\n\t};\n\n\n\t// @todo - Is there need for an augment function?\n\t// _Api.augment = function ( inst, name )\n\t// {\n\t// \t// Find src object in the structure from the name\n\t// \tvar parts = name.split('.');\n\n\t// \t_Api.extend( inst, obj );\n\t// };\n\n\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\n\t_Api.register = _api_register = function ( name, val )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t\t_Api.register( name[j], val );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\n\t\tvar find = function ( src, name ) {\n\t\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\t\tif ( src[i].name === name ) {\n\t\t\t\t\treturn src[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\n\t\t\tvar src = find( struct, key );\n\t\t\tif ( ! src ) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   []\n\t\t\t\t};\n\t\t\t\tstruct.push( src );\n\t\t\t}\n\n\t\t\tif ( i === ien-1 ) {\n\t\t\t\tsrc.val = val;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\n\n\t_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t\t_Api.register( pluralName, val );\n\n\t\t_Api.register( singularName, function () {\n\t\t\tvar ret = val.apply( this, arguments );\n\n\t\t\tif ( ret === this ) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\telse if ( ret instanceof _Api ) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\t$.isArray( ret[0] ) ?\n\t\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t} );\n\t};\n\n\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function ( selector, a )\n\t{\n\t\t// Integer is used to pick out a table by index\n\t\tif ( typeof selector === 'number' ) {\n\t\t\treturn [ a[ selector ] ];\n\t\t}\n\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = $.map( a, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\n\t\treturn $(nodes)\n\t\t\t.filter( selector )\n\t\t\t.map( function (i) {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\t\treturn a[ idx ];\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\n\n\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register( 'tables()', function ( selector ) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector ?\n\t\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\t\tthis;\n\t} );\n\n\n\t_api_register( 'table()', function ( selector ) {\n\t\tvar tables = this.tables( selector );\n\t\tvar ctx = tables.context;\n\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api( ctx[0] ) :\n\t\t\ttables;\n\t} );\n\n\n\t_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTable;\n\t\t}, 1 );\n\t} );\n\n\n\t_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTBody;\n\t\t}, 1 );\n\t} );\n\n\n\t_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTHead;\n\t\t}, 1 );\n\t} );\n\n\n\t_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTFoot;\n\t\t}, 1 );\n\t} );\n\n\n\t_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1 );\n\t} );\n\n\n\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register( 'draw()', function ( paging ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( paging === 'page' ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\n\t\t\t\t_fnReDraw( settings, paging===false );\n\t\t\t}\n\t\t} );\n\t} );\n\n\n\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t * Set the current page.\n\t *\n\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t * not throw an error, but rather reset the paging.\n\t *\n\t * @param {integer|string} action The paging action to take. This can be one of:\n\t *  * `integer` - The page index to jump to\n\t *  * `string` - An action to take:\n\t *    * `first` - Jump to first page.\n\t *    * `next` - Jump to the next page\n\t *    * `previous` - Jump to previous page\n\t *    * `last` - Jump to the last page.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page()', function ( action ) {\n\t\tif ( action === undefined ) {\n\t\t\treturn this.page.info().page; // not an expensive call\n\t\t}\n\n\t\t// else, have an action to take on all tables\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnPageChange( settings, action );\n\t\t} );\n\t} );\n\n\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register( 'page.info()', function ( action ) {\n\t\tif ( this.context.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tvar\n\t\t\tsettings   = this.context[0],\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t\t};\n\t} );\n\n\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t * Set the current page length.\n\t *\n\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page.len()', function ( len ) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif ( len === undefined ) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// else, set the page length\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLengthChange( settings, len );\n\t\t} );\n\t} );\n\n\n\n\tvar __reload = function ( settings, holdPosition, callback ) {\n\t\t// Use the draw event to trigger a callback\n\t\tif ( callback ) {\n\t\t\tvar api = new _Api( settings );\n\n\t\t\tapi.one( 'draw', function () {\n\t\t\t\tcallback( api.ajax.json() );\n\t\t\t} );\n\t\t}\n\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, true );\n\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t\t_fnClearTable( settings );\n\n\t\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t\t}\n\n\t\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t} );\n\t\t}\n\t};\n\n\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register( 'ajax.json()', function () {\n\t\tvar ctx = this.context;\n\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\n\t\t// else return undefined;\n\t} );\n\n\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register( 'ajax.params()', function () {\n\t\tvar ctx = this.context;\n\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\n\t\t// else return undefined;\n\t} );\n\n\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\t\treturn this.iterator( 'table', function (settings) {\n\t\t\t__reload( settings, resetPaging===false, callback );\n\t\t} );\n\t} );\n\n\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t * current context.\n\t *\n\t * @param {string} url URL to set.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url()', function ( url ) {\n\t\tvar ctx = this.context;\n\n\t\tif ( url === undefined ) {\n\t\t\t// get\n\t\t\tif ( ctx.length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\n\t\t\treturn ctx.ajax ?\n\t\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\tctx.ajax :\n\t\t\t\tctx.sAjaxSource;\n\t\t}\n\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t// value of `sAjaxSource` redundant.\n\t\t} );\n\t} );\n\n\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t__reload( ctx, resetPaging===false, callback );\n\t\t} );\n\t} );\n\n\n\n\n\tvar _selector_run = function ( type, selector, selectFn, settings, opts )\n\t{\n\t\tvar\n\t\t\tout = [], res,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\t\tselector = [ selector ];\n\t\t}\n\n\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[ selector[i] ];\n\n\t\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\t\tres = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );\n\n\t\t\t\tif ( res && res.length ) {\n\t\t\t\t\tout = out.concat( res );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif ( ext.length ) {\n\t\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\t\tout = ext[i]( settings, opts, out );\n\t\t\t}\n\t\t}\n\n\t\treturn _unique( out );\n\t};\n\n\n\tvar _selector_opts = function ( opts )\n\t{\n\t\tif ( ! opts ) {\n\t\t\topts = {};\n\t\t}\n\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif ( opts.filter && opts.search === undefined ) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\n\t\treturn $.extend( {\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts );\n\t};\n\n\n\tvar _selector_first = function ( inst )\n\t{\n\t\t// Reduce the API instance to the first item found\n\t\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\t\tif ( inst[i].length > 0 ) {\n\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t// and truncate the instance and context\n\t\t\t\tinst[0] = inst[i];\n\t\t\t\tinst[0].length = 1;\n\t\t\t\tinst.length = 1;\n\t\t\t\tinst.context = [ inst.context[i] ];\n\n\t\t\t\treturn inst;\n\t\t\t}\n\t\t}\n\n\t\t// Not found - return an empty instance\n\t\tinst.length = 0;\n\t\treturn inst;\n\t};\n\n\n\tvar _selector_row_indexes = function ( settings, opts )\n\t{\n\t\tvar\n\t\t\ti, ien, tmp, a=[],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\t\tvar\n\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\tpage   = opts.page;    // all, current\n\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range( 0, displayMaster.length );\n\t\t}\n\t\telse if ( page == 'current' ) {\n\t\t\t// Current page implies that order=current and fitler=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\t\ta.push( displayFiltered[i] );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'current' || order == 'applied' ) {\n\t\t\ta = search == 'none' ?\n\t\t\t\tdisplayMaster.slice() :                      // no search\n\t\t\t\tsearch == 'applied' ?\n\t\t\t\t\tdisplayFiltered.slice() :                // applied search\n\t\t\t\t\t$.map( displayMaster, function (el, i) { // removed search\n\t\t\t\t\t\treturn $.inArray( el, displayFiltered ) === -1 ? el : null;\n\t\t\t\t\t} );\n\t\t}\n\t\telse if ( order == 'index' || order == 'original' ) {\n\t\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tif ( search == 'none' ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t\telse { // applied | removed\n\t\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t};\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\n\n\tvar __row_selector = function ( settings, selector, opts )\n\t{\n\t\tvar rows;\n\t\tvar run = function ( sel ) {\n\t\t\tvar selInt = _intVal( sel );\n\t\t\tvar i, ien;\n\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif ( selInt !== null && ! opts ) {\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\n\t\t\tif ( ! rows ) {\n\t\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t\t}\n\n\t\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\n\t\t\t// Selector - function\n\t\t\tif ( typeof sel === 'function' ) {\n\t\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\t\tvar row = settings.aoData[ idx ];\n\t\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t\t);\n\n\t\t\t// Selector - node\n\t\t\tif ( sel.nodeName ) {\n\t\t\t\tif ( sel._DT_RowIndex !== undefined ) {\n\t\t\t\t\treturn [ sel._DT_RowIndex ]; // Property added by DT for fast lookup\n\t\t\t\t}\n\t\t\t\telse if ( sel._DT_CellIndex ) {\n\t\t\t\t\treturn [ sel._DT_CellIndex.row ];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t\t// get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\t\treturn [ rowObj.idx ];\n\t\t\t\t}\n\n\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter( sel )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\t};\n\n\t\treturn _selector_run( 'row', selector, run, settings, opts );\n\t};\n\n\n\t_api_register( 'rows()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\n\t\topts = _selector_opts( opts );\n\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __row_selector( settings, selector, opts );\n\t\t}, 1 );\n\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\n\t\treturn inst;\n\t} );\n\n\t_api_register( 'rows().nodes()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1 );\n\t} );\n\n\t_api_register( 'rows().data()', function () {\n\t\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t\t}, 1 );\n\t} );\n\n\t_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1 );\n\t} );\n\n\t_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\t_fnInvalidate( settings, row, src );\n\t\t} );\n\t} );\n\n\t_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn row;\n\t\t}, 1 );\n\t} );\n\n\t_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t\t}\n\t\t}\n\n\t\treturn new _Api( context, a );\n\t} );\n\n\t_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\t\tvar that = this;\n\n\t\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\t\tvar i, ien, j, jen;\n\t\t\tvar loopRow, loopCells;\n\n\t\t\tdata.splice( row, 1 );\n\n\t\t\t// Update the cached indexes\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tloopRow = data[i];\n\t\t\t\tloopCells = loopRow.anCells;\n\n\t\t\t\t// Rows\n\t\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t}\n\n\t\t\t\t// Cells\n\t\t\t\tif ( loopCells !== null ) {\n\t\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Delete from the display arrays\n\t\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow( settings );\n\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\t\tif ( id !== undefined ) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\t} );\n\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t}\n\t\t} );\n\n\t\treturn this;\n\t} );\n\n\n\t_api_register( 'rows.add()', function ( rows ) {\n\t\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\n\t\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn out;\n\t\t\t}, 1 );\n\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows( -1 );\n\t\tmodRows.pop();\n\t\t$.merge( modRows, newRows );\n\n\t\treturn modRows;\n\t} );\n\n\n\n\n\n\t/**\n\t *\n\t */\n\t_api_register( 'row()', function ( selector, opts ) {\n\t\treturn _selector_first( this.rows( selector, opts ) );\n\t} );\n\n\n\t_api_register( 'row().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Set\n\t\tctx[0].aoData[ this[0] ]._aData = data;\n\n\t\t// Automatically invalidate\n\t\t_fnInvalidate( ctx[0], this[0], 'data' );\n\n\t\treturn this;\n\t} );\n\n\n\t_api_register( 'row().node()', function () {\n\t\tvar ctx = this.context;\n\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\t\tnull;\n\t} );\n\n\n\t_api_register( 'row.add()', function ( row ) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif ( row instanceof $ && row.length ) {\n\t\t\trow = row[0];\n\t\t}\n\n\t\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t\t}\n\t\t\treturn _fnAddData( settings, row );\n\t\t} );\n\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row( rows[0] );\n\t} );\n\n\n\n\tvar __details_add = function ( ctx, row, data, klass )\n\t{\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function ( r, k ) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif ( $.isArray( r ) || r instanceof $ ) {\n\t\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\t\taddRow( r[i], k );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\trows.push( r );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td/></tr>').addClass( k );\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass( k )\n\t\t\t\t\t.html( r )\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\n\t\t\t\trows.push( created[0] );\n\t\t\t}\n\t\t};\n\n\t\taddRow( data, klass );\n\n\t\tif ( row._details ) {\n\t\t\trow._details.detach();\n\t\t}\n\n\t\trow._details = $(rows);\n\n\t\t// If the children were already shown, that state should be retained\n\t\tif ( row._detailsShow ) {\n\t\t\trow._details.insertAfter( row.nTr );\n\t\t}\n\t};\n\n\n\tvar __details_remove = function ( api, idx )\n\t{\n\t\tvar ctx = api.context;\n\n\t\tif ( ctx.length ) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n\t\t\tif ( row && row._details ) {\n\t\t\t\trow._details.remove();\n\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t}\n\t\t}\n\t};\n\n\n\tvar __details_display = function ( api, show ) {\n\t\tvar ctx = api.context;\n\n\t\tif ( ctx.length && api.length ) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\n\t\t\tif ( row._details ) {\n\t\t\t\trow._detailsShow = show;\n\n\t\t\t\tif ( show ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t}\n\n\t\t\t\t__details_events( ctx[0] );\n\t\t\t}\n\t\t}\n\t};\n\n\n\tvar __details_events = function ( settings )\n\t{\n\t\tvar api = new _Api( settings );\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw'+namespace;\n\t\tvar colvisEvent = 'column-visibility'+namespace;\n\t\tvar destroyEvent = 'destroy'+namespace;\n\t\tvar data = settings.aoData;\n\n\t\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\n\t\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\n\t\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = data[i];\n\n\t\t\t\t\tif ( row._details ) {\n\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp+'row().child';\n\tvar _child_mth = _child_obj+'()';\n\n\t// data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register( _child_mth, function ( data, klass ) {\n\t\tvar ctx = this.context;\n\n\t\tif ( data === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\t\tundefined;\n\t\t}\n\t\telse if ( data === true ) {\n\t\t\t// show\n\t\t\tthis.child.show();\n\t\t}\n\t\telse if ( data === false ) {\n\t\t\t// remove\n\t\t\t__details_remove( this );\n\t\t}\n\t\telse if ( ctx.length && this.length ) {\n\t\t\t// set\n\t\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t\t}\n\n\t\treturn this;\n\t} );\n\n\n\t_api_register( [\n\t\t_child_obj+'.show()',\n\t\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n\t], function ( show ) {   // it returns an object and this method is not executed)\n\t\t__details_display( this, true );\n\t\treturn this;\n\t} );\n\n\n\t_api_register( [\n\t\t_child_obj+'.hide()',\n\t\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, false );\n\t\treturn this;\n\t} );\n\n\n\t_api_register( [\n\t\t_child_obj+'.remove()',\n\t\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n\t], function () {           // it returns an object and this method is not executed)\n\t\t__details_remove( this );\n\t\treturn this;\n\t} );\n\n\n\t_api_register( _child_obj+'.isShown()', function () {\n\t\tvar ctx = this.context;\n\n\t\tif ( ctx.length && this.length ) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t} );\n\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\n\tvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\n\n\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function ( settings, column, r1, r2, rows ) {\n\t\tvar a = [];\n\t\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t\t}\n\t\treturn a;\n\t};\n\n\n\tvar __column_selector = function ( settings, selector, opts )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck( columns, 'sName' ),\n\t\t\tnodes = _pluck( columns, 'nTh' );\n\n\t\tvar run = function ( s ) {\n\t\t\tvar selInt = _intVal( s );\n\n\t\t\t// Selector - all\n\t\t\tif ( s === '' ) {\n\t\t\t\treturn _range( columns.length );\n\t\t\t}\n\n\t\t\t// Selector - index\n\t\t\tif ( selInt !== null ) {\n\t\t\t\treturn [ selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// Selector = function\n\t\t\tif ( typeof s === 'function' ) {\n\t\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\n\t\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// jQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match( __re_column_selector ) :\n\t\t\t\t'';\n\n\t\t\tif ( match ) {\n\t\t\t\tswitch( match[2] ) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cell in the table body\n\t\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t\t}\n\n\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $( nodes )\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[ host.data('dt-column') ] :\n\t\t\t\t[];\n\t\t};\n\n\t\treturn _selector_run( 'column', selector, run, settings, opts );\n\t};\n\n\n\tvar __setColumnVis = function ( settings, column, vis ) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol  = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\trow, cells, i, ien, tr;\n\n\t\t// Get\n\t\tif ( vis === undefined ) {\n\t\t\treturn col.bVisible;\n\t\t}\n\n\t\t// Set\n\t\t// No change\n\t\tif ( col.bVisible === vis ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( vis ) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Remove column\n\t\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t\t}\n\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\n\t\t_fnSaveState( settings );\n\t};\n\n\n\t_api_register( 'columns()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\n\t\topts = _selector_opts( opts );\n\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __column_selector( settings, selector, opts );\n\t\t}, 1 );\n\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\n\t\treturn inst;\n\t} );\n\n\t_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTh;\n\t\t}, 1 );\n\t} );\n\n\t_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTf;\n\t\t}, 1 );\n\t} );\n\n\t_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\t\treturn this.iterator( 'column-rows', __columnData, 1 );\n\t} );\n\n\t_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1 );\n\t} );\n\n\t_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1 );\n\t} );\n\n\t_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t\t}, 1 );\n\t} );\n\n\t_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\t\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\t\tif ( vis === undefined ) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // else\n\t\t\t__setColumnVis( settings, column, vis );\n\t\t} );\n\n\t\t// Group the column visibility changes\n\t\tif ( vis !== undefined ) {\n\t\t\t// Second loop once the first is done for events\n\t\t\tthis.iterator( 'column', function ( settings, column ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t} );\n\n\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\tthis.columns.adjust();\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t} );\n\n\t_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\t\tcolumn;\n\t\t}, 1 );\n\t} );\n\n\t_api_register( 'columns.adjust()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}, 1 );\n\t} );\n\n\t_api_register( 'column.index()', function ( type, idx ) {\n\t\tif ( this.context.length !== 0 ) {\n\t\t\tvar ctx = this.context[0];\n\n\t\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t\t}\n\t\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t\t}\n\t\t}\n\t} );\n\n\t_api_register( 'column()', function ( selector, opts ) {\n\t\treturn _selector_first( this.columns( selector, opts ) );\n\t} );\n\n\n\n\tvar __cell_selector = function ( settings, selector, opts )\n\t{\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\t\tvar allCells = $( [].concat.apply([], cells) );\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\n\t\tvar run = function ( s ) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\n\t\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\n\t\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\n\t\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\t// Selector - index\n\t\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t\treturn [s];\n\t\t\t}\n\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function (i, el) {\n\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t \t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[ {\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t} ] :\n\t\t\t\t[];\n\t\t};\n\n\t\treturn _selector_run( 'cell', selector, run, settings, opts );\n\t};\n\n\n\n\n\t_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t\t// Argument shifting\n\t\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t\t// Indexes\n\t\t\tif ( rowSelector.row === undefined ) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ( $.isPlainObject( columnSelector ) ) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\n\t\t// Cell selector\n\t\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t\t} );\n\t\t}\n\n\t\t// Row + column selector\n\t\tvar columns = this.columns( columnSelector, opts );\n\t\tvar rows = this.rows( rowSelector, opts );\n\t\tvar a, i, ien, j, jen;\n\n\t\tvar cells = this.iterator( 'table', function ( settings, idx ) {\n\t\t\ta = [];\n\n\t\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\t\ta.push( {\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}, 1 );\n\n\t\t$.extend( cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t} );\n\n\t\treturn cells;\n\t} );\n\n\n\t_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\tvar data = settings.aoData[ row ];\n\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1 );\n\t} );\n\n\n\t_api_register( 'cells().data()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column );\n\t\t}, 1 );\n\t} );\n\n\n\t_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1 );\n\t} );\n\n\n\t_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column, type );\n\t\t}, 1 );\n\t} );\n\n\n\t_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t\t};\n\t\t}, 1 );\n\t} );\n\n\n\t_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\t_fnInvalidate( settings, row, src, column );\n\t\t} );\n\t} );\n\n\n\n\t_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\t\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n\t} );\n\n\n\t_api_register( 'cell().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Set\n\t\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\n\t\treturn this;\n\t} );\n\n\n\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {integer} order Column index to sort upon.\n\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 1D array of sorting information to be applied.\n\t * @param {array} [...] Optional additional sorting conditions\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 2D array of sorting information to be applied.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order()', function ( order, dir ) {\n\t\tvar ctx = this.context;\n\n\t\tif ( order === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// set\n\t\tif ( typeof order === 'number' ) {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [ [ order, dir ] ];\n\t\t}\n\t\telse if ( order.length && ! $.isArray( order[0] ) ) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = Array.prototype.slice.call( arguments );\n\t\t}\n\t\t// otherwise a 2D array was passed in\n\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSorting = order.slice();\n\t\t} );\n\t} );\n\n\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order.listener()', function ( node, column, callback ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSortAttachListener( settings, node, column, callback );\n\t\t} );\n\t} );\n\n\n\t_api_register( 'order.fixed()', function ( set ) {\n\t\tif ( ! set ) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\n\t\t\treturn $.isArray( fixed ) ?\n\t\t\t\t{ pre: fixed } :\n\t\t\t\tfixed;\n\t\t}\n\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t\t} );\n\t} );\n\n\n\t// Order by the selected column(s)\n\t_api_register( [\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function ( dir ) {\n\t\tvar that = this;\n\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tvar sort = [];\n\n\t\t\t$.each( that[i], function (j, col) {\n\t\t\t\tsort.push( [ col, dir ] );\n\t\t\t} );\n\n\t\t\tsettings.aaSorting = sort;\n\t\t} );\n\t} );\n\n\n\n\t_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\t\tvar ctx = this.context;\n\n\t\tif ( input === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} ), 1 );\n\t\t} );\n\t} );\n\n\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction ( input, regex, smart, caseInsen ) {\n\t\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\t\tif ( input === undefined ) {\n\t\t\t\t\t// get\n\t\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t\t}\n\n\t\t\t\t// set\n\t\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t\t} );\n\t\t}\n\t);\n\n\t/*\n\t * State API methods\n\t */\n\n\t_api_register( 'state()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t} );\n\n\n\t_api_register( 'state.clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t\t} );\n\t} );\n\n\n\t_api_register( 'state.loaded()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t} );\n\n\n\t_api_register( 'state.save()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSaveState( settings );\n\t\t} );\n\t} );\n\n\n\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n\t{\n\t\tvar aThis = DataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n\t{\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\n\t\tif ( table instanceof DataTable.Api ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$.each( DataTable.settings, function (i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t} );\n\n\t\treturn is;\n\t};\n\n\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = DataTable.fnTables = function ( visible )\n\t{\n\t\tvar api = false;\n\n\t\tif ( $.isPlainObject( visible ) ) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\n\t\tvar a = $.map( DataTable.settings, function (o) {\n\t\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\t\treturn o.nTable;\n\t\t\t}\n\t\t} );\n\n\t\treturn api ?\n\t\t\tnew _Api( a ) :\n\t\t\ta;\n\t};\n\n\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\n\t/**\n\t *\n\t */\n\t_api_register( '$()', function ( selector, opts ) {\n\t\tvar\n\t\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\n\t\treturn $( [].concat(\n\t\t\tjqRows.filter( selector ).toArray(),\n\t\t\tjqRows.find( selector ).toArray()\n\t\t) );\n\t} );\n\n\n\t// jQuery functions to operate on the tables\n\t$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\t\te+'.dt' :\n\t\t\t\t\te;\n\t\t\t\t} ).join( ' ' );\n\n\t\t\tvar inst = $( this.tables().nodes() );\n\t\t\tinst[key].apply( inst, args );\n\t\t\treturn this;\n\t\t} );\n\t} );\n\n\n\t_api_register( 'clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnClearTable( settings );\n\t\t} );\n\t} );\n\n\n\t_api_register( 'settings()', function () {\n\t\treturn new _Api( this.context, this.context );\n\t} );\n\n\n\t_api_register( 'init()', function () {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t} );\n\n\n\t_api_register( 'data()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _pluck( settings.aoData, '_aData' );\n\t\t} ).flatten();\n\t} );\n\n\n\t_api_register( 'destroy()', function ( remove ) {\n\t\tremove = remove || false;\n\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tvar orig      = settings.nTableWrapper.parentNode;\n\t\t\tvar classes   = settings.oClasses;\n\t\t\tvar table     = settings.nTable;\n\t\t\tvar tbody     = settings.nTBody;\n\t\t\tvar thead     = settings.nTHead;\n\t\t\tvar tfoot     = settings.nTFoot;\n\t\t\tvar jqTable   = $(table);\n\t\t\tvar jqTbody   = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\t\tvar i, ien;\n\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif ( ! remove ) {\n\t\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t\t}\n\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t$(window).off('.DT-'+settings.sInstance);\n\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif ( table != thead.parentNode ) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append( thead );\n\t\t\t}\n\n\t\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append( tfoot );\n\t\t\t}\n\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( settings );\n\n\t\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\n\t\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t\t);\n\n\t\t\tif ( settings.bJUI ) {\n\t\t\t\t$('th span.'+classes.sSortIcon+ ', td span.'+classes.sSortIcon, thead).detach();\n\t\t\t\t$('th, td', thead).each( function () {\n\t\t\t\t\tvar wrapper = $('div.'+classes.sSortJUIWrapper, this);\n\t\t\t\t\t$(this).append( wrapper.contents() );\n\t\t\t\t\twrapper.detach();\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append( rows );\n\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif ( ! remove && orig ) {\n\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t\t.removeClass( classes.sTable );\n\n\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\tien = settings.asDestroyStripes.length;\n\n\t\t\t\tif ( ien ) {\n\t\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t\t}\n\t\t} );\n\t} );\n\n\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t\t_api_register( type+'s().every()', function ( fn ) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\n\t\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t\t// Rows and columns:\n\t\t\t\t//  arg1 - index\n\t\t\t\t//  arg2 - table counter\n\t\t\t\t//  arg3 - loop counter\n\t\t\t\t//  arg4 - undefined\n\t\t\t\t// Cells:\n\t\t\t\t//  arg1 - row index\n\t\t\t\t//  arg2 - column index\n\t\t\t\t//  arg3 - table counter\n\t\t\t\t//  arg4 - loop counter\n\t\t\t\tfn.call(\n\t\t\t\t\tapi[ type ](\n\t\t\t\t\t\targ1,\n\t\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t\t),\n\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t} );\n\n\n\t// i18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register( 'i18n()', function ( token, def, plural ) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\n\t\tif ( resolved === undefined ) {\n\t\t\tresolved = def;\n\t\t}\n\n\t\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\n\t\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n\t} );\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See http://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.10.15\";\n\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\n\n\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true\n\t};\n\n\n\n\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t */\n\t\t\"anCells\": null,\n\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": null,\n\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aFilterData\": null,\n\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sFilterRow\": null,\n\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\",\n\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"src\": null,\n\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t *  @type integer\n\t\t *  @default -1\n\t\t *  @private\n\t\t */\n\t\t\"idx\": -1\n\t};\n\n\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t * is faster to just hold it as a variable\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"idx\": null,\n\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sManualType\": null,\n\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @private\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\n\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would at around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit.\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.data\n\t\t *\n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (`data`)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\n\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.order\n\t\t *\n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\n\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.orderFixed\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\n\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t *   DataTables 1.9-.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t *\n\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t *\n\t\t *  @type string|object|function\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.ajax\n\t\t *  @since 1.10.0\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax.\n\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t *   // from a plain array rather than an array in an object\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Add data to the request\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Send request as POST\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t *   // adding, editing and removing rows).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n\t\t */\n\t\t\"ajax\": null,\n\n\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\n\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.column\n\t\t */\n\t\t\"aoColumns\": null,\n\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.columnDefs\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\n\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.searchCols\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\n\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t * array may be of any length, and DataTables will apply each class\n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t *    options</i>\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.stripeClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\n\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.autoWidth\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\n\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.deferRender\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\n\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.destroy\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\n\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.searching\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\n\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information\n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\n\n\t\t/**\n\t\t * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\n\t\t * slightly different and additional mark-up from what DataTables has\n\t\t * traditionally used).\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.jQueryUI\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"jQueryUI\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bJQueryUI\": false,\n\n\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.lengthChange\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\n\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.paging\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\n\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\n\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.retrieve\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *\n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *\n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\n\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\n\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverSide\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\n\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.ordering\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\n\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderMulti\n\t\t *\n\t\t *  @example\n\t\t *    // Disable multiple column sorting ability\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortMulti\": true,\n\n\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\n\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.orderClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\n\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t *\n\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.stateSave\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\n\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.createdRow\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\n\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.drawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\n\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t *  @type function\n\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.footerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\n\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} toFormat number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.formatNumber\n\t\t *\n\t\t *  @example\n\t\t *    // Format a number using a single quote for the separator (note that\n\t\t *    // this can also be done with the language.thousands option)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function ( toFormat ) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\n\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} head \"TR\" element for the header\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.headerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\n\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} start Starting position in data for the draw\n\t\t *  @param {int} end End position in data for the draw\n\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.infoCallback\n\t\t *\n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\n\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.initComplete\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\n\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\n\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.rowCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\n\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server so something more suitable for your application.\n\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t * AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} callback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverData\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerData\": null,\n\n\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t *    as this is passed by reference.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverParams\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerParams\": null,\n\n\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} callback Callback that can be executed when done. It\n\t\t *    should be passed the loaded state object.\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings, callback) {\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              callback( json );\n\t\t *            }\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadCallback\": function ( settings ) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\n\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that is to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\n\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that was loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoaded\n\t\t *\n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\n\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\t\tJSON.stringify( data )\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\n\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\n\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.stateDuration\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\n\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.deferLoading\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\n\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pageLength\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\n\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.displayStart\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\n\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.tabIndex\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\n\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.classes\n\t\t */\n\t\t\"oClasses\": {},\n\n\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\n\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No courses are available\",\n\n\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\n\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\n\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\n\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t *  @type string\n\t\t\t *  @default\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\n\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\n\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\n\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *  @default Processing...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"Processing...\",\n\n\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"\",\n\n\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\n\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\n\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.search\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\n\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t * source or for server-side processing - this parameter allows that\n\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t * get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default data\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxDataProp\": \"data\",\n\n\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * You can instruct DataTables to load data from an external\n\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxSource\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxSource\": null,\n\n\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li>\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.dom\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\n\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.searchDelay\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"searchDelay\": null,\n\n\n\t\t/**\n\t\t * DataTables features six different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `numbers` - Page number buttons only\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t *\n\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t *  @type string\n\t\t *  @default simple_numbers\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pagingType\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"simple_numbers\",\n\n\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t *  @type boolean|string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollX\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\n\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollXInner\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\n\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollY\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\n\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverMethod\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\n\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t *  @type string|object\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.renderer\n\t\t *\n\t\t */\n\t\t\"renderer\": null,\n\n\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t *  @type string\n\t\t *  @default DT_RowId\n\t\t *\n\t\t *  @name DataTable.defaults.rowId\n\t\t */\n\t\t\"rowId\": \"DT_RowId\"\n\t};\n\n\t_fnHungarianMap( DataTable.defaults );\n\n\n\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t *  @type array|int\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderData\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\n\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc' ],\n\n\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.searchable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\n\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\n\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.visible\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\n\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} td The TD node that has been created\n\t\t *  @param {*} cellData The Data for the cell\n\t\t *  @param {array|object} rowData The data for the whole row\n\t\t *  @param {int} row The row index for the aoData data store\n\t\t *  @param {int} col The column index for aoColumns\n\t\t *\n\t\t *  @name DataTable.defaults.column.createdCell\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\n\n\t\t/**\n\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t *  @name DataTable.defaults.column.dataProp\n\t\t */\n\n\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t *\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.data\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Read information from deeply nested objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"platform.details.0\" },\n\t\t *          { \"data\": \"platform.details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `data` as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed dislay and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using default content\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using array notation - outputting a list from an array\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t */\n\t\t\"mData\": null,\n\n\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t *\n\t\t *  @type string|int|function|object|null\n\t\t *  @default null Use the data source value.\n\t\t *\n\t\t *  @name DataTable.defaults.column.render\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Execute a function to obtain data\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // As an object, extracting different data for the different types\n\t\t *    // This would be used with a data source such as:\n\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\n\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *\n\t\t *  @name DataTable.defaults.column.cellType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\n\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.class\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\n\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\n\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.name\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\n\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\n\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t *    original HTML table.</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.title\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\n\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.type\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\n\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.width\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\n\t_fnHungarianMap( DataTable.defaults.column );\n\n\n\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant\n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all fro DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\n\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false,\n\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\n\t\t\t/**\n\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bBounding\": false,\n\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\n\n\t\t\"ajax\": null,\n\n\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"aIds\": {},\n\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\n\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data\n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"searchDelay\": null,\n\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iStateDuration\": 0,\n\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oSavedState\": null,\n\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case\n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\n\t\t/**\n\t\t * Note if draw should be blocked while getting data\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bAjaxDataGet\": true,\n\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"json\": undefined,\n\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\n\t\t/**\n\t\t * Flag to indicate if jQuery UI marking and classes should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bJUI\": null,\n\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\n\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t *  @type function\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tvar\n\t\t\t\tlen      = this._iDisplayLength,\n\t\t\t\tstart    = this._iDisplayStart,\n\t\t\t\tcalc     = start + len,\n\t\t\t\trecords  = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\n\t\t\tif ( features.bServerSide ) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\n\t\t/**\n\t\t * Last applied sort\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLastSort\": [],\n\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oPlugins\": {},\n\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"rowIdFn\": null,\n\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"rowId\": null\n\t};\n\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\n\n\t/**\n\t * DataTables extensions\n\t *\n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\n\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\n\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuilder: \"-source-\",\n\n\n\t\t/**\n\t\t * Error reporting.\n\t\t *\n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\n\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t *\n\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t * use through the `dom` initialisation option.\n\t\t *\n\t\t * Each feature plug-in is described by an object which must have the\n\t\t * following properties:\n\t\t *\n\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t *   instillation option. This is case sensitive.\n\t\t *\n\t\t * The `fnInit` function has the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t *   be useful when developing a plug-in which allows table control via\n\t\t *   keyboard entry\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n\t\t */\n\t\tfeature: [],\n\n\n\t\t/**\n\t\t * Row searching.\n\t\t *\n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\n\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\n\n\t\t/**\n\t\t * Internal functions, exposed for used in plug-ins.\n\t\t *\n\t\t * Please note that you should not need to use the internal methods for\n\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t * The internal function may change between releases.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tinternal: {},\n\n\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\n\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t *\n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\n\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\n\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t *\n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t *\n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t *\n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\n\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be analysed\n\t\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t\t     *     perform context specific type detection - for example detection\n\t\t     *     based on language settings such as using a comma for a decimal\n\t\t     *     place. Generally speaking the options from the settings will not\n\t\t     *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! $.isNumeric( data.substring(1) ) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\n\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t *\n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\n\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data to compare to the second parameter\n\t\t     *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\n\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatiblity only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\n\n\t\t/**\n\t\t * jQuery UI class container\n\t\t *  @type object\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\toJUIClasses: {},\n\n\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\n\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend( _ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toApi:         _ext.internal,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t} );\n\n\n\t$.extend( DataTable.ext.classes, {\n\t\t\"sTable\": \"dataTable\",\n\t\t\"sNoFooter\": \"no-footer\",\n\n\t\t/* Paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"current\",\n\t\t\"sPageButtonDisabled\": \"disabled\",\n\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_asc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_desc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\n\t\t/* Filtering */\n\t\t\"sFilterInput\": \"\",\n\n\t\t/* Page length */\n\t\t\"sLengthSelect\": \"\",\n\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\n\t\t/* Misc */\n\t\t\"sHeaderTH\": \"\",\n\t\t\"sFooterTH\": \"\",\n\n\t\t// Deprecated\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t} );\n\n\n\t(function() {\n\n\t// Reused strings for better compression. Closure compiler appears to have a\n\t// weird edge case where it is trying to expand strings rather than use the\n\t// variable version. This results in about 200 bytes being added, for very\n\t// little preference benefit since it this run on script load only.\n\tvar _empty = '';\n\t_empty = '';\n\n\tvar _stateDefault = _empty + 'ui-state-default';\n\tvar _sortIcon     = _empty + 'css_right ui-icon ui-icon-';\n\tvar _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix';\n\n\t$.extend( DataTable.ext.oJUIClasses, DataTable.ext.classes, {\n\t\t/* Full numbers paging buttons */\n\t\t\"sPageButton\":         \"fg-button ui-button \"+_stateDefault,\n\t\t\"sPageButtonActive\":   \"ui-state-disabled\",\n\t\t\"sPageButtonDisabled\": \"ui-state-disabled\",\n\n\t\t/* Features */\n\t\t\"sPaging\": \"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi \"+\n\t\t\t\"ui-buttonset-multi paging_\", /* Note that the type is postfixed */\n\n\t\t/* Sorting */\n\t\t\"sSortAsc\":            _stateDefault+\" sorting_asc\",\n\t\t\"sSortDesc\":           _stateDefault+\" sorting_desc\",\n\t\t\"sSortable\":           _stateDefault+\" sorting\",\n\t\t\"sSortableAsc\":        _stateDefault+\" sorting_asc_disabled\",\n\t\t\"sSortableDesc\":       _stateDefault+\" sorting_desc_disabled\",\n\t\t\"sSortableNone\":       _stateDefault+\" sorting_disabled\",\n\t\t\"sSortJUIAsc\":         _sortIcon+\"triangle-1-n\",\n\t\t\"sSortJUIDesc\":        _sortIcon+\"triangle-1-s\",\n\t\t\"sSortJUI\":            _sortIcon+\"carat-2-n-s\",\n\t\t\"sSortJUIAscAllowed\":  _sortIcon+\"carat-1-n\",\n\t\t\"sSortJUIDescAllowed\": _sortIcon+\"carat-1-s\",\n\t\t\"sSortJUIWrapper\":     \"DataTables_sort_wrapper\",\n\t\t\"sSortIcon\":           \"DataTables_sort_icon\",\n\n\t\t/* Scrolling */\n\t\t\"sScrollHead\": \"dataTables_scrollHead \"+_stateDefault,\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot \"+_stateDefault,\n\n\t\t/* Misc */\n\t\t\"sHeaderTH\":  _stateDefault,\n\t\t\"sFooterTH\":  _stateDefault,\n\t\t\"sJUIHeader\": _headerFooter+\" ui-corner-tl ui-corner-tr\",\n\t\t\"sJUIFooter\": _headerFooter+\" ui-corner-bl ui-corner-br\"\n\t} );\n\n\t}());\n\n\n\n\tvar extPagination = DataTable.ext.pager;\n\n\tfunction _numbers ( page, pages ) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\tbuttons = extPagination.numbers_length,\n\t\t\thalf = Math.floor( buttons / 2 ),\n\t\t\ti = 1;\n\n\t\tif ( pages <= buttons ) {\n\t\t\tnumbers = _range( 0, pages );\n\t\t}\n\t\telse if ( page <= half ) {\n\t\t\tnumbers = _range( 0, buttons-2 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t}\n\t\telse if ( page >= pages - 1 - half ) {\n\t\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\telse {\n\t\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\n\t\tnumbers.DT_el = 'span';\n\t\treturn numbers;\n\t}\n\n\n\t$.extend( extPagination, {\n\t\tsimple: function ( page, pages ) {\n\t\t\treturn [ 'previous', 'next' ];\n\t\t},\n\n\t\tfull: function ( page, pages ) {\n\t\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t\t},\n\n\t\tnumbers: function ( page, pages ) {\n\t\t\treturn [ _numbers(page, pages) ];\n\t\t},\n\n\t\tsimple_numbers: function ( page, pages ) {\n\t\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t\t},\n\n\t\tfull_numbers: function ( page, pages ) {\n\t\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t\t},\n\n\t\tfirst_last_numbers: function (page, pages) {\n\t \t\treturn ['first', _numbers(page, pages), 'last'];\n\t \t},\n\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _numbers,\n\n\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\tnumbers_length: 7\n\t} );\n\n\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tpageButton: {\n\t\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\tvar btnDisplay, btnClass, counter=0;\n\n\t\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\t\tvar i, ien, node, button;\n\t\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t\t};\n\n\t\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tbutton = buttons[i];\n\n\t\t\t\t\t\tif ( $.isArray( button ) ) {\n\t\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\tbtnClass = '';\n\n\t\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t\t.appendTo( container );\n\n\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\tvar activeEl;\n\n\t\t\t\ttry {\n\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t// completed\n\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\n\t\t\t\tattach( $(host).empty(), buttons );\n\n\t\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\n\n\n\t// Built in type detection. See model.ext.aTypes for information about\n\t// what is required from this methods.\n\t$.extend( DataTable.ext.type.detect, [\n\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t\t},\n\n\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t},\n\n\t\t// Formatted numbers\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t\t},\n\n\t\t// HTML numeric\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t\t},\n\n\t\t// HTML numeric, formatted\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t\t},\n\n\t\t// HTML (this is strict checking - there must be html)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t'html' : null;\n\t\t}\n\t] );\n\n\n\n\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t// what is required from these methods.\n\t//\n\t// Note that additional search methods are added for the html numbers and\n\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t// place is\n\n\n\t$.extend( DataTable.ext.type.search, {\n\t\thtml: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata\n\t\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t\t'';\n\t\t},\n\n\t\tstring: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\t\tdata;\n\t\t}\n\t} );\n\n\n\n\tvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\t\tif ( d !== 0 && (!d || d === '-') ) {\n\t\t\treturn -Infinity;\n\t\t}\n\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif ( decimalPlace ) {\n\t\t\td = _numToDecimal( d, decimalPlace );\n\t\t}\n\n\t\tif ( d.replace ) {\n\t\t\tif ( re1 ) {\n\t\t\t\td = d.replace( re1, '' );\n\t\t\t}\n\n\t\t\tif ( re2 ) {\n\t\t\t\td = d.replace( re2, '' );\n\t\t\t}\n\t\t}\n\n\t\treturn d * 1;\n\t};\n\n\n\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t// in a function to provide an easy ability for the language options to add\n\t// additional methods if a non-period decimal place is used.\n\tfunction _addNumericSort ( decimalPlace ) {\n\t\t$.each(\n\t\t\t{\n\t\t\t\t// Plain numbers\n\t\t\t\t\"num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t\t},\n\n\t\t\t\t// Formatted numbers\n\t\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t\t},\n\n\t\t\t\t// HTML numeric\n\t\t\t\t\"html-num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t\t},\n\n\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction ( key, fn ) {\n\t\t\t\t// Add the ordering method\n\t\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\n\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\n\t// Default sort methods\n\t$.extend( _ext.type.order, {\n\t\t// Dates\n\t\t\"date-pre\": function ( d ) {\n\t\t\treturn Date.parse( d ) || -Infinity;\n\t\t},\n\n\t\t// html\n\t\t\"html-pre\": function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t},\n\n\t\t// string\n\t\t\"string-pre\": function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t},\n\n\t\t// string-asc and -desc are retained only for compatibility with the old\n\t\t// sort methods\n\t\t\"string-asc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\n\t\t\"string-desc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t}\n\t} );\n\n\n\t// Numeric sorting types - order doesn't matter here\n\t_addNumericSort( '' );\n\n\n\t$.extend( true, DataTable.ext.renderer, {\n\t\theader: {\n\t\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t}\n\n\t\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tcolumn.sSortingClass +' '+\n\t\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t},\n\n\t\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t\t.append( cell.contents() )\n\t\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( cell );\n\n\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\n\t\t\t\t\tcell\n\t\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\n\tvar __htmlEscapeEntities = function ( d ) {\n\t\treturn typeof d === 'string' ?\n\t\t\td.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t\treturn {\n\t\t\t\tdisplay: function ( d ) {\n\t\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat( d );\n\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t\t}\n\n\t\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\t\td = Math.abs( flo );\n\n\t\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t\t'';\n\n\t\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix||'');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\ttext: function () {\n\t\t\treturn {\n\t\t\t\tdisplay: __htmlEscapeEntities\n\t\t\t};\n\t\t}\n\t};\n\n\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\n\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} fn API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#internal\n\t */\n\tfunction _fnExternApiFunc (fn)\n\t{\n\t\treturn function() {\n\t\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t);\n\t\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t\t};\n\t}\n\n\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that\n\t * these methods are references to internal functions and are considered to be\n\t * private. If you use these methods, be aware that they are liable to change\n\t * between versions.\n\t *  @namespace\n\t */\n\t$.extend( DataTable.ext.internal, {\n\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t_fnAddColumn: _fnAddColumn,\n\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t_fnGetColumns: _fnGetColumns,\n\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t_fnAddData: _fnAddData,\n\t\t_fnAddTr: _fnAddTr,\n\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t_fnGetCellData: _fnGetCellData,\n\t\t_fnSetCellData: _fnSetCellData,\n\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t_fnClearTable: _fnClearTable,\n\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t_fnInvalidate: _fnInvalidate,\n\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t_fnCreateTr: _fnCreateTr,\n\t\t_fnBuildHead: _fnBuildHead,\n\t\t_fnDrawHead: _fnDrawHead,\n\t\t_fnDraw: _fnDraw,\n\t\t_fnReDraw: _fnReDraw,\n\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t_fnFilter: _fnFilter,\n\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t_fnFilterData: _fnFilterData,\n\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t_fnInitialise: _fnInitialise,\n\t\t_fnInitComplete: _fnInitComplete,\n\t\t_fnLengthChange: _fnLengthChange,\n\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t_fnPageChange: _fnPageChange,\n\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t_fnThrottle: _fnThrottle,\n\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t_fnStringToCss: _fnStringToCss,\n\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t_fnSort: _fnSort,\n\t\t_fnSortAria: _fnSortAria,\n\t\t_fnSortListener: _fnSortListener,\n\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t_fnSortData: _fnSortData,\n\t\t_fnSaveState: _fnSaveState,\n\t\t_fnLoadState: _fnLoadState,\n\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t_fnLog: _fnLog,\n\t\t_fnMap: _fnMap,\n\t\t_fnBindAction: _fnBindAction,\n\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t_fnRenderer: _fnRenderer,\n\t\t_fnDataSource: _fnDataSource,\n\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t\t                                // in 1.10, so this dead-end function is\n\t\t                                // added to prevent errors\n\t} );\n\n\n\t// jQuery access\n\t$.fn.dataTable = DataTable;\n\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function ( opts ) {\n\t\treturn $(this).dataTable( opts ).api();\n\t};\n\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each( DataTable, function ( prop, val ) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t} );\n\n\n\t// Information about events fired by DataTables - for documentation.\n\t/**\n\t * Draw event, fired whenever the table is redrawn on the page, at the same\n\t * point as fnDrawCallback. This may be useful for binding events or\n\t * performing calculations when the table is altered at all.\n\t *  @name DataTable#draw.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Search event, fired when the searching applied to the table (using the\n\t * built-in global search, or column filters) is altered.\n\t *  @name DataTable#search.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page change event, fired when the paging of the table is altered.\n\t *  @name DataTable#page.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Order event, fired when the ordering applied to the table is altered.\n\t *  @name DataTable#order.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * DataTables initialisation complete event, fired when the table is fully\n\t * drawn, including Ajax data loaded, if Ajax data is required.\n\t *  @name DataTable#init.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used</li></ol>\n\t */\n\n\t/**\n\t * State save event, fired when the table has changed state a new state save\n\t * is required. This event allows modification of the state saving object\n\t * prior to actually doing the save, including addition or other state\n\t * properties (for plug-ins) or modification of a DataTables core property.\n\t *  @name DataTable#stateSaveParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The state information to be saved\n\t */\n\n\t/**\n\t * State load event, fired when the table is loading state from the stored\n\t * data, but prior to the settings object being modified by the saved state\n\t * - allowing modification of the saved state is required or loading of\n\t * state for a plug-in.\n\t *  @name DataTable#stateLoadParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * State loaded event, fired when state has been loaded from stored data and\n\t * the settings object has been modified by the loaded data.\n\t *  @name DataTable#stateLoaded.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * Processing event, fired when DataTables is doing some kind of processing\n\t * (be it, order, searcg or anything else). It can be used to indicate to\n\t * the end user that there is something happening, or that something has\n\t * finished.\n\t *  @name DataTable#processing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n\t */\n\n\t/**\n\t * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n\t * request to made to the server for new data. This event is called before\n\t * DataTables processed the returned data, so it can also be used to pre-\n\t * process the data returned from the server, if needed.\n\t *\n\t * Note that this trigger is called in `fnServerData`, if you override\n\t * `fnServerData` and which to use this event, you need to trigger it in you\n\t * success function.\n\t *  @name DataTable#xhr.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {object} json JSON returned from the server\n\t *\n\t *  @example\n\t *     // Use a custom property returned from the server in another DOM element\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       $('#status').html( json.status );\n\t *     } );\n\t *\n\t *  @example\n\t *     // Pre-process the data returned from the server\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n\t *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n\t *       }\n\t *       // Note no return - manipulate the data directly in the JSON object.\n\t *     } );\n\t */\n\n\t/**\n\t * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n\t * or passing the bDestroy:true parameter in the initialisation object. This\n\t * can be used to remove bound events, added DOM nodes, etc.\n\t *  @name DataTable#destroy.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page length change event, fired when number of records to show on each\n\t * page (the length) is changed.\n\t *  @name DataTable#length.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {integer} len New length\n\t */\n\n\t/**\n\t * Column sizing has changed.\n\t *  @name DataTable#column-sizing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Column visibility has changed.\n\t *  @name DataTable#column-visibility.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {int} column Column index\n\t *  @param {bool} vis `false` if column now hidden, or `true` if visible\n\t */\n\n\treturn $.fn.dataTable;\n}));\n"],"file":"jquery.dataTables.min.js"}