{"version":3,"sources":["course_progress.js"],"names":["define","$","Ajax","Notification","Templates","courseProgressTable","SELECTORS","ROOT","TABLE","DATA_TABLE","STUDENT_PROGRESS_ELEMENT","STUDENT_PROGRESS_TABLE","COURSE_NAME","MESSAGE_HIDDEN","MESSAGE_AREA","TOGGLE_DESCRIPTION","REVERT","CUSTOM_MESSAGE","MESSAGE_SEND","BLOCK_PROCESSING","PROMISES","GET_COURSES","search","length","start","order","call","methodname","args","GET_COURSE_PROGRESS","courseid","SEND_MESSAGE","studentid","messagetext","createPieProgress","target","element","find","asPieProgress","namespace","speed","classes","svg","number","content","sendMessageToUser","message","done","response","val","click","fail","ex","exception","hide","initializeEvents","root","on","this","data","render","html","js","replaceNodeContents","DataTable","scrollY","scrollCollapse","paging","retrieve","lengthchange","autoWidth","scrollX","info","language","searchPlaceholder","responsive","addClass","animate","scrollTop","offset","top","console","log","getCourseProgressData","destroy","empty","show","focus","toggleClass","parents","init","document","ready","setTimeout","pagingType","bPaginate","bServerSide","M","util","get_string","emptyTable","lengthMenu","paginate","first","previous","next","last","ajax","callback","settings","siblings","value","recordsTotal","removeClass","courses","forEach","course","dData","index","enrolledStudents","id","fullname","startdate","students","progress","percentage","push","columns","orderable","drawCallback","createDatatable"],"mappings":"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","sourcesContent":["define([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/templates',\n    'block_remuiblck/jquery.dataTables',\n    'block_remuiblck/dataTables.bootstrap4',\n    'theme_remui/jquery-asPieProgress',\n    'theme_remui/aspieprogress'\n], function(\n    $,\n    Ajax,\n    Notification,\n    Templates\n) {\n    var SELECTORS = {\n        ROOT: '',\n        TABLE: '#DataTables_Teacher',\n        DATA_TABLE: '#DataTables_Teacher_wrapper',\n        STUDENT_PROGRESS_ELEMENT: '.student_progress_ele',\n        STUDENT_PROGRESS_TABLE: '#wdmCourseProgressTable',\n        COURSE_NAME: '.wdm_course_name.has-student',\n        MESSAGE_HIDDEN: '#messageidhidden',\n        MESSAGE_AREA: '#messagearea',\n        TOGGLE_DESCRIPTION: '.toggle-desc',\n        REVERT: '#courserevertbtn',\n        CUSTOM_MESSAGE: '.custom-message',\n        MESSAGE_SEND: '.send-message',\n        BLOCK_PROCESSING: '.block-processing'\n    };\n\n    var PROMISES = {\n        /**\n         * Get courses using ajax\n         * @param  {String}  search Search query\n         * @param  {Number}  length Number of courses\n         * @param  {Number}  start  Start index of courses\n         * @param  {Array}   order  Sorting order\n         * @return {Promise}        Ajax promise\n         */\n        GET_COURSES: function(search, length, start, order) {\n            return Ajax.call([{\n                methodname: 'block_remuiblck_get_course_progress_list',\n                args: {\n                    search: search,\n                    length: length,\n                    start: start,\n                    order: order\n                }\n            }])[0];\n        },\n        /**\n         * Get course progress using course id and ajax\n         * @param  {Number}  courseid Course id\n         * @return {Promise}          Ajax promise\n         */\n        GET_COURSE_PROGRESS: function(courseid) {\n            return Ajax.call([{\n                methodname: 'block_remuiblck_get_course_progress',\n                args: {\n                    courseid: courseid\n                }\n            }])[0];\n        },\n        /**\n         * Send message to student using student id and ajax\n         * @param  {Number} studentid   Student id\n         * @param  {String} messagetext Message text\n         * @return {Promise}            Ajax promise\n         */\n        SEND_MESSAGE: function(studentid, messagetext) {\n            return Ajax.call([{\n                methodname: 'block_remuiblck_send_message',\n                args: {\n                    studentid: studentid,\n                    messagetext: messagetext\n                }\n            }])[0];\n        }\n    }\n\n    /**\n     * Generate teacher courses table data from ajax response\n     * @param  {Array}  courses Courses list with course details\n     * @return {Object}         Data object\n     */\n    function generate_courses_table_data(courses) {\n        var data = [];\n        courses.forEach(function(course) {\n            var dData = {};\n            dData.index = '<div class=\"w-50\" tabindex=\"0\">'+course.index+'</div>';\n            if (course.enrolledStudents > 0) {\n                dData.course = '<div class=\"wdm_course_name has-student\" data-courseid=\"'+course.id+'\"><a href=\"javascript:void(0)\">'+course.fullname+'</a></div>';\n            } else {\n                dData.course = '<div class=\"wdm_course_name\" data-courseid=\"'+course.id+'\" >'+course.fullname+'</div>';\n            }\n            dData.startdate = course.startdate;\n            dData.students = '<div class=\"w-100\"><span class=\"w-full pl-40\">'+course.enrolledStudents+'</span></div>';\n            dData.progress = '<td class=\"w-100 px-10\"><div class=\"pie-progress pie-progress-xs m-0 w-35\" data-plugin=\"pieProgress\" data-valuemax=\"50\" data-barcolor=\"#11c26d\" data-size=\"20\" data-barsize=\"3\" data-goal=\"35\" aria-valuenow=\"'+course.percentage+'\" role=\"progressbar\" style=\"max-width: 35px!important;\"><div class=\"pie-progress-content\" style=\"z-index:2;\"> </div> <span class=\" progress-percent\" style=\"margin-left: 50px;position: absolute;top: 8px;\">'+course.percentage+'%</span> </div></td>';\n            data.push(dData);\n        });\n        return data;\n    }\n\n    //*****************\n    // This is code is for table creation on dashboard\n    // this code also toggles between course progress and student progress table\n    // Function createDatatable() creates course progress table\n    function createDatatable(root) {\n        $(root).show().find(SELECTORS.TABLE).DataTable({\n            \"paging\":   true,\n            \"pagingType\": \"simple_numbers\",\n            \"autoWidth\": true,\n            \"scrollX\": true,\n            \"bPaginate\": true,\n            \"bServerSide\": true,\n            language: {\n                searchPlaceholder: M.util.get_string('search', 'moodle'),\n                emptyTable: M.util.get_string('nomatchingcourses', 'core_backup'),\n                lengthMenu: M.util.get_string('show', 'moodle') + \" _MENU_ \" + M.util.get_string('entries', 'moodle'),\n                paginate: {\n                    first:      M.util.get_string('first', 'moodle'),\n                    previous:   M.util.get_string('previous', 'moodle'),\n                    next:       M.util.get_string('next', 'moodle'),\n                    last:       M.util.get_string('last', 'moodle')\n                },\n            },\n            \"ajax\": function(data, callback, settings) {\n                $(root).siblings(SELECTORS.BLOCK_PROCESSING).addClass('show');\n                PROMISES.GET_COURSES(\n                    data.search.value,\n                    data.length,\n                    data.start,\n                    data.order[0]\n                ).done(function(response) {\n                    if (response.recordsTotal == 0) {\n                        response.data = [];\n                        callback(response);\n                        $(root).siblings(SELECTORS.BLOCK_PROCESSING).removeClass('show');\n                        return;\n                    }\n                    response.data = generate_courses_table_data(response.courses);\n                    callback(response);\n                    $(root).siblings(SELECTORS.BLOCK_PROCESSING).removeClass('show');\n                }).fail(Notification.exception);\n            },\n            columns: [\n                { data: \"index\" },\n                { data: \"course\" },\n                { data: \"startdate\" },\n                { data: \"students\", \"orderable\" : false },\n                { data: \"progress\", \"orderable\" : false }\n            ],\n            responsive: true,\n            drawCallback: function(settings) {\n                createPieProgress('');\n            }\n        });\n    }\n\n\n    /**\n     * Create pie progress where div with .pie-progress class is present\n     */\n    function createPieProgress(target) {\n        var element = $(SELECTORS.ROOT);\n        if (target != '') {\n            element = element.find(target);\n        }\n        element.find('.pie-progress').asPieProgress({\n            namespace: 'pie-progress',\n            speed: 30,\n            classes: {\n                svg: 'pie-progress-svg',\n                element: 'pie-progress',\n                number: 'pie-progress-number',\n                content: 'pie-progress-content'\n            }\n        });\n    }\n\n    var courseProgressTable;\n    /**\n     * Fetch students course progress data using ajax and display in table format\n     * @param  {int} courseid Course id\n     */\n    function getCourseProgressData(courseid){\n        PROMISES.GET_COURSE_PROGRESS(courseid).done(function(response) {\n            Templates.render('block_remuiblck/course_progress_view', response)\n            .done(function(html, js) {\n                Templates.replaceNodeContents($(SELECTORS.ROOT).find(SELECTORS.STUDENT_PROGRESS_ELEMENT), html, js);\n                createPieProgress(SELECTORS.STUDENT_PROGRESS_ELEMENT);\n                courseProgressTable = $(SELECTORS.ROOT).find(SELECTORS.STUDENT_PROGRESS_TABLE).DataTable({\n                    \"scrollY\":        \"300px\",\n                    \"scrollCollapse\": true,\n                    \"paging\":false,\n                    \"retrieve\": true,\n                    \"lengthchange\":false,\n                    \"autoWidth\": true,\n                    \"scrollX\": true,\n                    \"search\": \"Fred\",\n                    \"info\":false,\n                    language: {\n                        searchPlaceholder: \"Search\"\n                    },\n                    responsive: true,\n                });\n\n                $(SELECTORS.ROOT).find('div.dataTables_filter input').addClass('form-control');\n                $(SELECTORS.ROOT).find('div.dataTables_length select').addClass('form-control');\n\n                $('html, body').animate({\n                    scrollTop: $(SELECTORS.ROOT).offset().top - 120\n                }, 300);\n            })\n            .fail(function(ex) {\n                console.log(ex);\n            });\n        }).fail(function(ex) {\n            $(SELECTORS.ROOT).find('div#analysis-chart-area').hide();\n        });\n\n    }\n\n\n    /**\n     * Send message to user\n     * @param  {int}    studentid Student id\n     * @param  {string} message   Text message\n     */\n    function sendMessageToUser(studentid, message) {\n        PROMISES.SEND_MESSAGE(studentid, message)\n        .done(function(response) {\n            clearModalFields();\n            $(SELECTORS.ROOT).find('.close-message').click();\n        })\n        .fail(function(ex) {\n            Notification.exception(ex);\n            $(SELECTORS.ROOT).find('div#analysis-chart-area').hide();\n        });\n    }\n\n    /**\n     * Clear message modal field\n     */\n    function clearModalFields() {\n        $(SELECTORS.ROOT).find(SELECTORS.MESSAGE_HIDDEN).val('');\n        $(SELECTORS.ROOT).find(SELECTORS.MESSAGE_AREA).val('');\n    }\n\n    function initializeEvents(root) {\n        // Destroy the table and send ajax request\n        $('body').on('click', root + ' ' + SELECTORS.COURSE_NAME,function(){\n            var courseid = $(this).data('courseid');\n            // teacherViewTable.destroy();\n            $(root).find(SELECTORS.DATA_TABLE).hide();\n            getCourseProgressData(courseid);\n        })\n\n        // Restore the previous table\n        .on('click', root + ' ' + SELECTORS.REVERT,function(){\n            courseProgressTable.destroy();\n            $(root).find(SELECTORS.STUDENT_PROGRESS_ELEMENT).empty();\n            $(root).find(SELECTORS.DATA_TABLE).show();\n            $('html, body').animate({\n                scrollTop: $(SELECTORS.ROOT).offset().top - 120\n            }, 300);\n        })\n\n        // This block opens modal and sends message to user\n        .on('click', root + ' ' + SELECTORS.CUSTOM_MESSAGE,function(){\n            var studentid = $(this).data('studentid');\n            $(SELECTORS.MESSAGE_HIDDEN).val(studentid);\n        })\n\n        // Send message\n        .on('click', root + ' ' + SELECTORS.MESSAGE_SEND,function(){\n            var studentid = $(root).find(SELECTORS.MESSAGE_HIDDEN).val();\n            var message   = $(root).find(SELECTORS.MESSAGE_AREA).val();\n            if(message != '') {\n                sendMessageToUser(studentid, message);\n            } else {\n                $(SELECTORS.MESSAGE_AREA).focus();\n            }\n        })\n\n        // Toggle description of student progress\n        .on('click', SELECTORS.STUDENT_PROGRESS_ELEMENT + ' ' + SELECTORS.TOGGLE_DESCRIPTION, function() {\n            $(this).toggleClass('fa-plus');\n            $(this).toggleClass('fa-minus');\n            $(this).parents(SELECTORS.STUDENT_PROGRESS_ELEMENT).find('.panel-body').toggleClass('show');\n        });\n\n        // Teacher courses listing table order pieprogress\n        $(root + ' ' + SELECTORS.TABLE).on('order.dt', function () {\n           createPieProgress('');\n        });\n\n        // Student progress listing table order pieprogress\n        $(root + ' ' + SELECTORS.STUDENT_PROGRESS_TABLE).on('order.dt', function () {\n           createPieProgress('');\n        });\n    }\n\n    /**\n     * Load task on initialisation\n     * @param DOM root block DOM object\n     */\n    var init = function(root) {\n        SELECTORS.ROOT = root;\n        $(document).ready(function() {\n            setTimeout(function() {\n                createPieProgress('');\n                createDatatable(root);\n                initializeEvents(root);\n            }, 2000);\n        });\n    };\n    return {\n        init: init\n    };\n});\n"],"file":"course_progress.min.js"}